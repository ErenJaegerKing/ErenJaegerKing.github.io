import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,e as n,o as a}from"./app-Bbvoqxo2.js";const o={};function i(l,e){return a(),r("div",null,e[0]||(e[0]=[n('<h3 id="满二叉树" tabindex="-1"><a class="header-anchor" href="#满二叉树"><span>满二叉树</span></a></h3><p>满二叉树就是每一层节点都是满的，整棵树像一个正三角形。</p><h3 id="完全二叉树" tabindex="-1"><a class="header-anchor" href="#完全二叉树"><span>完全二叉树</span></a></h3><p>完全二叉树是指，二叉树的每一层的节点都紧凑靠左排列，且除了最后一层，其他每层都必须是满的。 <strong>完全二叉树的特点：由于它的节点紧凑排列，如果从左到右从上到下对它的每个节点编号，那么父子节点的索引存在明显的规律</strong>。</p><h3 id="二叉搜索树" tabindex="-1"><a class="header-anchor" href="#二叉搜索树"><span>二叉搜索树</span></a></h3><p>二叉搜索树（Binary Search Tree，简称 BST）是一种很常见的二叉树 对于树中的每个节点，其<strong>左子树的每个节点</strong>的值都要小于这个节点的值，<strong>右子树的每个节点</strong>的值都要大于这个节点的值。你可以简单记为「左小右大」。 <strong>BST 是非常常用的数据结构。因为左小右大的特性，可以让我们在 BST 中快速找到某个节点，或者找到某个范围内的所有节点，这是 BST 的优势所在</strong>。</p>',6)]))}const c=t(o,[["render",i],["__file","二叉树基础及常见类型.html.vue"]]),h=JSON.parse('{"path":"/notes/algorithm/labuladong/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%9F%BA%E7%A1%80%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%B1%BB%E5%9E%8B.html","title":"二叉树基础以及常见类型","lang":"zh-CN","frontmatter":{"title":"二叉树基础以及常见类型","description":"满二叉树 满二叉树就是每一层节点都是满的，整棵树像一个正三角形。 完全二叉树 完全二叉树是指，二叉树的每一层的节点都紧凑靠左排列，且除了最后一层，其他每层都必须是满的。 完全二叉树的特点：由于它的节点紧凑排列，如果从左到右从上到下对它的每个节点编号，那么父子节点的索引存在明显的规律。 二叉搜索树 二叉搜索树（Binary Search Tree，简称 ...","icon":"","date":"2024-09-15T00:00:00.000Z","category":["数据结构与算法"],"tag":["结构"],"head":[["meta",{"property":"og:url","content":"https://he9.xin/notes/algorithm/labuladong/%E4%BA%8C%E5%8F%89%E6%A0%91%E5%9F%BA%E7%A1%80%E5%8F%8A%E5%B8%B8%E8%A7%81%E7%B1%BB%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"春风不语即随本心"}],["meta",{"property":"og:title","content":"二叉树基础以及常见类型"}],["meta",{"property":"og:description","content":"满二叉树 满二叉树就是每一层节点都是满的，整棵树像一个正三角形。 完全二叉树 完全二叉树是指，二叉树的每一层的节点都紧凑靠左排列，且除了最后一层，其他每层都必须是满的。 完全二叉树的特点：由于它的节点紧凑排列，如果从左到右从上到下对它的每个节点编号，那么父子节点的索引存在明显的规律。 二叉搜索树 二叉搜索树（Binary Search Tree，简称 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-10T07:58:23.000Z"}],["meta",{"property":"article:author","content":"ErenJaegerKing"}],["meta",{"property":"article:tag","content":"结构"}],["meta",{"property":"article:published_time","content":"2024-09-15T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-10T07:58:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"二叉树基础以及常见类型\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-09-15T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-10T07:58:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ErenJaegerKing\\",\\"url\\":\\"https://he9.xin\\",\\"email\\":\\"erenjaegerking@qq.com\\"}]}"]]},"headers":[{"level":3,"title":"满二叉树","slug":"满二叉树","link":"#满二叉树","children":[]},{"level":3,"title":"完全二叉树","slug":"完全二叉树","link":"#完全二叉树","children":[]},{"level":3,"title":"二叉搜索树","slug":"二叉搜索树","link":"#二叉搜索树","children":[]}],"git":{"createdTime":1726414121000,"updatedTime":1728547103000,"contributors":[{"name":"ErenJaeger","email":"ErenJaegerKing@qq.com","commits":1}]},"readingTime":{"minutes":1.01,"words":302},"filePathRelative":"notes/algorithm/labuladong/二叉树基础及常见类型.md","localizedDate":"2024年9月15日","excerpt":"<h3>满二叉树</h3>\\n<p>满二叉树就是每一层节点都是满的，整棵树像一个正三角形。</p>\\n<h3>完全二叉树</h3>\\n<p>完全二叉树是指，二叉树的每一层的节点都紧凑靠左排列，且除了最后一层，其他每层都必须是满的。\\n<strong>完全二叉树的特点：由于它的节点紧凑排列，如果从左到右从上到下对它的每个节点编号，那么父子节点的索引存在明显的规律</strong>。</p>\\n<h3>二叉搜索树</h3>\\n<p>二叉搜索树（Binary Search Tree，简称 BST）是一种很常见的二叉树\\n对于树中的每个节点，其<strong>左子树的每个节点</strong>的值都要小于这个节点的值，<strong>右子树的每个节点</strong>的值都要大于这个节点的值。你可以简单记为「左小右大」。\\n<strong>BST 是非常常用的数据结构。因为左小右大的特性，可以让我们在 BST 中快速找到某个节点，或者找到某个范围内的所有节点，这是 BST 的优势所在</strong>。</p>","autoDesc":true}');export{c as comp,h as data};
