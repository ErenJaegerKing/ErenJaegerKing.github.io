import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,e as n,o as l}from"./app-tK5k8aWv.js";const h={};function k(e,s){return l(),a("div",null,s[0]||(s[0]=[n(`<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>胜不骄，败不馁 我最大的敌人就是我自己 心比天高，眼高手低 菜就是菜，不要给自己找借口 将所有相关的场景都自己去实现一遍</p></div><h2 id="zh" tabindex="-1"><a class="header-anchor" href="#zh"><span>zh</span></a></h2><h3 id="linux-中查看占用内存命令" tabindex="-1"><a class="header-anchor" href="#linux-中查看占用内存命令"><span>Linux 中查看占用内存命令</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">我在Linux常用的命令</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">top</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查看系统资源使用情况</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">df</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -h</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查看磁盘空间使用情况</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ps</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -ef</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查看所有包含java的进程</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (最主要的参数是%CPU </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">和</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> %MEM</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> app.jar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">output.log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 2&gt;&amp;1 &amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">后台启动Java应用，并将日志保存到指定文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">netstat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -anp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8080</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查看端口占用情况</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">kill</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -9</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pid</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 强制杀死一个进程</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.查看系统整体内存使用情况</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">free</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -h</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2.查看各个进程的内存占用</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">top(按</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Shift</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> +</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> M</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 可以按内存使用排序。</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">top</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 命令用于实时显示系统的资源使用情况，包括</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CPU、内存、进程等。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">top</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 14:32:01</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  2:15,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">  2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> users,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  load</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> average:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.15,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 0.10,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0.05</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Tasks:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 120</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> total,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> running,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 119</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleeping,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stopped,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zombie</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">%Cpu(s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">):  1.5 us,  0.5 sy,  0.0 ni, 97.5 id,  0.5 wa,  0.0 hi,  0.0 si,  0.0 st</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">MiB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Mem</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   8000.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> total,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   2000.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> free,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   3000.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> used,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   3000.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> buff/cache</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">MiB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Swap:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   2000.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> total,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   1500.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> free,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    500.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> used.</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   4000.0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> avail</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Mem</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> USER</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      PR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  NI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    VIRT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    RES</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    SHR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  %CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">  %MEM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">     TIME+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> COMMAND</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 1234</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   12345</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   6789</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   1234</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   1.0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0.1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0:00.10</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> 5678</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> user</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">      20</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   23456</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   7890</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   2345</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> S</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0.5</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">   0.2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">   0:01.20</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> python</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 第一行：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">14:32:01</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：当前时间。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">up</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2:15\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：系统已运行</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 小时</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 15</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 分钟。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> users\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：当前有</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 个用户登录。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">load</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> average\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：系统的平均负载（1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 分钟、5</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 分钟、15</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 分钟）。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 第二行（Tasks）：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">120</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> total\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：总进程数。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> running\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：正在运行的进程数。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">119</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sleeping\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：休眠的进程数。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stopped\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：停止的进程数。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> zombie\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：僵尸进程数。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 第三行（%Cpu</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">s</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">）：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">us</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：用户空间占用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 百分比。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：内核空间占用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 百分比。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：空闲</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 百分比。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wa</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：等待</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> I/O</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 操作的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 百分比。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">hi</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：硬件中断占用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 百分比。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">si</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：软件中断占用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 百分比。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">st</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：虚拟机偷取的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 百分比。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 第四行（MiB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Mem）：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">total</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：总内存。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">free</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：空闲内存。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">used</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：已用内存。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">buff/cache</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：缓存和缓冲区内存。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">5.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 第五行（MiB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Swap）：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">total</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：总交换分区大小。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">free</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：空闲交换分区大小。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">used</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：已用交换分区大小。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">avail</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Mem\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：可用内存。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">6.</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 进程列表：</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PID</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：进程</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ID。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">USER</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：进程所有者。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：进程优先级。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NI</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：进程的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nice</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 值。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">VIRT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：虚拟内存使用量。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RES</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：物理内存使用量。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SHR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：共享内存使用量。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：进程状态（S</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=休眠，R=运行，Z=僵尸）。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">%CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 使用率。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">%MEM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：内存使用率。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">TIME+</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：进程占用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CPU</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的总时间。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">   -</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> \`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">COMMAND</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">\`</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：进程名称或命令。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我的看法是重点关注：%Cpu(s)（特别是 us 和 sy）、MiB Mem（特别是 used 和 avail Mem）、Swap（特别是 used）、进程列表中的 %CPU 和 %MEM。</p><p>为什么要重要关注 %CPU 和 %MEM？</p><p>%CPU：用于识别占用 CPU 最多的进程，帮助定位 CPU 密集型任务或性能瓶颈。%MEM：用于识别占用内存最多的进程，帮助定位内存泄漏或内存密集型任务。结合使用：通过 %CPU 和 %MEM 可以快速定位系统中的资源瓶颈，并采取相应的优化措施。</p><h3 id="linux-包括查看特定应用命令" tabindex="-1"><a class="header-anchor" href="#linux-包括查看特定应用命令"><span>Linux 包括查看特定应用命令</span></a></h3><p>ps aux | grep 应用</p><p>top -b -n 1 | grep 应用</p><h3 id="linux-中查看-8080-端口是否被占用" tabindex="-1"><a class="header-anchor" href="#linux-中查看-8080-端口是否被占用"><span>Linux 中查看 8080 端口是否被占用</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">唉，敲了那么多遍，你怎么还能忘记的啊？</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">netstat</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -tuln</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8080</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-t：显示TCP端口。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-u：显示UDP端口。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-l：显示监听中的端口。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">-n：以数字形式显示地址和端口号。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">grep</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> :8080：过滤出包含</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8080</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 端口的行。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="java-jar-命令可以在后台运行吗" tabindex="-1"><a class="header-anchor" href="#java-jar-命令可以在后台运行吗"><span>Java -jar 命令可以在后台运行吗</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1.使用</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">在后台运行</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =》简单后台运行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> your-app.jar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2.使用nohup防止进程被终止</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =》终端关闭后继续运行</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> java</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> your-app.jar</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">output.log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> 2&gt;&amp;1 &amp;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">nohup：忽略挂断信号，使进程在终端关闭后继续运行。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; output.log：将标准输出重定向到 output.log 文件。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">2&gt;&amp;1：将标准错误输出重定向到标准输出（即也写入 output.log）。</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&amp;</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">：将进程放到后台运行。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">和</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">在后台有什么区别</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3.使用系统服务（Systemd）</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=》长期运行服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4.使用</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 容器</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 怎么使用dockerfile部署Jar</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="dockerfile-怎么部署-jar" tabindex="-1"><a class="header-anchor" href="#dockerfile-怎么部署-jar"><span>Dockerfile 怎么部署 Jar</span></a></h3><ol><li>准备 JAR 文件</li><li>创建 Dockerfile</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 使用官方的 OpenJDK 镜像作为</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 基础镜像</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FROM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> openjdk:17-jdk-alpine</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置工作目录</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 工作目录指令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WORKDIR</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /app</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 将本地的 JAR 文件复制到容器中的 /app 目录</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 文件操作指令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">COPY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> test.jar</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /app/test.jar</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 暴露应用程序运行的端口（根据你的 JAR 文件配置修改）</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 暴露端口指令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">EXPOSE</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 8080</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置启动命令</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启动命令指令</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ENTRYPOINT</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;java&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;-jar&quot;,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;test.jar&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>构建 Docker 镜像</li></ol><p>docker build -t my-java-app .</p><ol start="4"><li>运行 Docker 容器</li></ol><p>docker run -d -p 8080:8080 --name my-java-container my-java-app</p><ol start="5"><li>查看容器日志</li></ol><p>docker logs -f my-java-container</p><h3 id="dockerfile-常见的模块-指令-及其作用" tabindex="-1"><a class="header-anchor" href="#dockerfile-常见的模块-指令-及其作用"><span>Dockerfile 常见的模块（指令）及其作用</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">一个典型的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Dockerfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 可能包含以下模块：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FROM：基础镜像。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">LABEL：元数据。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WORKDIR：工作目录。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">COPY/ADD：复制文件。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">RUN：执行命令。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ENV：设置环境变量。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">EXPOSE：暴露端口。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">CMD/ENTRYPOINT：启动命令。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">USER：指定用户。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">HEALTHCHECK：健康检查。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">VOLUME：定义卷。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ARG：构建参数。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">多阶段构建：优化镜像大小。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mysql-你是怎么配置的" tabindex="-1"><a class="header-anchor" href="#mysql-你是怎么配置的"><span>MySQL 你是怎么配置的</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的配置文件通常位于以下路径：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Linux：/etc/my.cnf</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 或</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/mysql/my.cnf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Windows：C:\\ProgramData\\MySQL\\MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Server</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> X.X</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">y.ini</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 配置文件分为多个部分，常见的部分包括：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[mysqld]：MySQL 服务器的配置。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[client]：MySQL 客户端的配置。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[mysql]：MySQL 命令行工具的配置。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[mysqldump]：MySQL 备份工具的配置。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="redis-你是怎么配置的" tabindex="-1"><a class="header-anchor" href="#redis-你是怎么配置的"><span>Redis 你是怎么配置的</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">我的常见配置文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Redis</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的配置文件通常位于以下路径：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Linux：/etc/redis/redis.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Windows：redis.windows.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">基础配置</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 绑定 IP 地址（默认只允许本地访问）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">bind</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 127.0.0.1</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 监听端口</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">port</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6379</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 守护进程模式（后台运行）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">daemonize</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 日志文件路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">logfile</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/log/redis/redis.log</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 数据库数量</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">databases</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 16</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">内存管理</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 最大内存限制</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">maxmemory</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 2gb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 内存淘汰策略</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">maxmemory-policy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> allkeys-lru</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 最近最少使用淘汰</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 其他策略：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># volatile-lru：只淘汰设置了过期时间的键</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># allkeys-random：随机淘汰</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># volatile-random：随机淘汰设置了过期时间的键</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># noeviction：不淘汰，返回错误</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">持久化配置</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启用 RDB 持久化</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">save</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 900</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 900 秒内至少 1 次修改则保存</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">save</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 300</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 300 秒内至少 10 次修改则保存</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">save</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 60</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10000</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> # 60 秒内至少 10000 次修改则保存</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># RDB 文件路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dbfilename</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> dump.rdb</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># RDB 文件存储目录</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">dir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /var/lib/redis</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 启用 AOF 持久化</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendonly</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yes</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># AOF 文件路径</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendfilename</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;appendonly.aof&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># AOF 同步策略</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendfsync</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> everysec</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 每秒同步一次</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 其他策略：</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># always：每次写入都同步</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># no：由操作系统决定何时同步</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">安全配置</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 设置密码</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">requirepass</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yourpassword</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 重命名危险命令（防止误操作）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rename-command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> FLUSHALL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 禁用 FLUSHALL</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rename-command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> FLUSHDB</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   # 禁用 FLUSHDB</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rename-command</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CONFIG</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    # 禁用 CONFIG</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">性能优化</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 客户端连接数限制</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">maxclients</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 超时设置（秒）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">timeout</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 300</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  # 客户端空闲 300 秒后断开连接</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># TCP 连接保活</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tcp-keepalive</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 60</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"># 禁用 THP（透明大页）</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">disable-thp</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> yes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="线程池你有使用过吗-有几个重要的参数-你有什么了解过吗" tabindex="-1"><a class="header-anchor" href="#线程池你有使用过吗-有几个重要的参数-你有什么了解过吗"><span>线程池你有使用过吗，有几个重要的参数，你有什么了解过吗</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    /**</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 用给定的初始参数创建一个新的ThreadPoolExecutor。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">     */</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    public</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ThreadPoolExecutor</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">int</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> corePoolSize,//线程池的核心线程数量</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                              int</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> maximumPoolSize,//线程池的最大线程数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                              BlockingQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;Runnable&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">workQueue,//任务队列，用来储存等待执行任务的队列</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                              long</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> keepAliveTime,//当线程数大于核心线程数时，多余的空闲线程存活的最长时间</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                              TimeUnit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unit,//时间单位</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                              ThreadFactory</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> threadFactory,//线程工厂，用来创建线程，一般默认即可</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">                              RejectedExecutionHandler</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> handler//拒绝策略，当提交的任务过多而不能及时处理时，我们可以定制策略来处理任务</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                               ) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">corePoolSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ||</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            maximumPoolSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ||</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            maximumPoolSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">corePoolSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ||</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            keepAliveTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &lt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            throw</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> IllegalArgumentException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">workQueue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> || </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">threadFactory</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> || </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">handler</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ==</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">            throw</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> new</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NullPointerException</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        this.corePoolSize</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> corePoolSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        this.maximumPoolSize</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> maximumPoolSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        this.workQueue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> workQueue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        this.keepAliveTime</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> unit.toNanos</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">keepAliveTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        this.threadFactory</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> threadFactory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        this.handler</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> handler</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    3个最重要的参数和4个其他常见参数</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>个人理解，有核心线程数（任务队列未到达列表容量时，最大可以同时运行的线程数量）、最大线程数（任务队列到达列表容量时，当前可以同时运行的线程数量变为最大线程数）、任务队列（新任务来临时先判断当前运行的线程数量是否达到核心线程数，如果到达的话，新任务就会被存放在队列中）、存活时间（当线程池中的线程数量大于核心线程数时，即有非核心线程时，这些非核心线程空闲后不会立即销毁，而是会等待，直到等到存活时间超过为止，才会被回收销毁）、时间单位（存活时间的单位）、线程工厂（excutor创建新线程的时候就会用到）、拒绝策略</p><h3 id="varchar-和-char-之间的关系你有了解过吗" tabindex="-1"><a class="header-anchor" href="#varchar-和-char-之间的关系你有了解过吗"><span>Varchar 和 Char 之间的关系你有了解过吗</span></a></h3><p>CHAR是定长字符串 VARCHAR是变长字符串</p><ol><li>存储方式 CHAR是固定长度，未使用部分用空格填充 VARCHAR可变长度，只存储实际内容</li><li>存储空间 CHAR固定，占用指定长度空间 VARCHAR根据实际内容动态分配空间</li><li>性能 CHAR查询速度通常更快（固定长度） VARCHAR查询速度可能稍慢（可变长度）</li><li>适用场景 CHAR适合长度固定的字符串（如国家代码、性别） VARCHAR适合长度不固定的字符串（如姓名、地址）</li><li>最大长度 CHAR通常为255字符 VARCHAR通常为65535字符（取决于数据库）</li></ol><p>CHAR: 固定长度，适合短且长度固定的字符串。</p><p>VARCHAR: 可变长度，适合长度不固定的字符串。</p><h3 id="mysql-设计数据库表的时候怎么使用常见的数据结构" tabindex="-1"><a class="header-anchor" href="#mysql-设计数据库表的时候怎么使用常见的数据结构"><span>MySQL 设计数据库表的时候怎么使用常见的数据结构</span></a></h3><p>数值类型：整型（TINYINT、SMALLINT、MEDIUMINT、INT 和 BIGINT）浮点型（FLOAT 和 DOUBLE）、定点型（DECIMAL）</p><p>字符串类型：CHAR、VARCHAR、TINYTEXT、TEXT、MEDIUMTEXT、LONGTEXT、TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB 等，最常用的是 CHAR 和 VARCHAR。</p><p>日期时间类型：YEAR、TIME、DATE、DATETIME 和 TIMESTAMP 等。</p><h3 id="mysql-索引失效的问题你有了解过吗" tabindex="-1"><a class="header-anchor" href="#mysql-索引失效的问题你有了解过吗"><span>MySQL 索引失效的问题你有了解过吗</span></a></h3><ol><li>最左匹配原则</li></ol><blockquote><p>概念：最左匹配原则顾名思义：最左优先，以最左边的为起点任何连续的索引都能匹配上。同时遇到范围查询(&gt;、&lt;、between、like)就会停止匹配。</p></blockquote><p>那为什么遇到范围查询就停止了呢，因为它是范围查询啊，哈哈哈哈哈哈</p><p>如果 INDEX <code>联合索引</code>(<code>sname</code>, <code>s_code</code>, <code>address</code>) USING BTREE</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> create_time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> from student where address = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;上海&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> and sname = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;变成派大星&quot;</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">select</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> create_time</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> from student where sname = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;变成派大星&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> and address = </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;上海&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>那么上面这两句都走了ref索引，因为优化器会自动调整sname，s_code的顺序</p><p>我的思考：首先它是发生在联合索引，是闯关游戏的设计，过了第一关才可以开始第二关，过了第二关才可以第三关</p><p>底层原理：索引的底层是一颗 B+树，那么联合索引的底层也就是一颗 B+树，只不过联合索引的 B+树节点中存储的是键值。由于构建一棵 B+树只能根据一个值来确定索引关系，所以数据库依赖联合索引最左的字段来构建</p><p>MySQL8.0版本开始增加了索引跳跃扫描的功能，当第一列索引的唯一值较少时，即使 where 条件没有第一列索引，查询的时候也可以用到联合索引。比如我们使用的联合索引是 bcd 但是 b 中字段比较少 我们在使用联合索引的时候没有 使用 b 但是依然可以使用联合索引 MySQL 联合索引有时候遵循最左前缀匹配原则，有时候不遵循。</p><p>总结：前提 如果创建 b,c,d 联合索引面</p><ul><li>如果 我 where 后面的条件是c = 1 and d = 1为什么不能走索引呢 如果没有 b 的话 你查询的值相当于<em>11 我们都知道</em>是所有的意思也就是我能匹配到所有的数据</li><li>如果 我 where 后面是b = 1 and d =1 为什么会走索引呢？你等于查询的数据是 1*1我可以通过前面 1 进行索引匹配 所以就可以走索引</li><li>最左缀匹配原则的最重要的就是 第一个字段</li></ul><ol start="2"><li>select *</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">explain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> select</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> leftaffix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>select * 会走索引</li><li>范围查找有概率索引失效但是在特定的情况下会生效 范围小就会使用 也可以理解为 返回结果集小就会使用索引</li><li>mysql 中连接查询的原理是先对驱动表进行查询操作，然后再用从驱动表得到的数据作为条件，逐条的到被驱动表进行查询。</li><li>每次驱动表加载一条数据到内存中，然后被驱动表所有的数据都需要往内存中加载一遍进行比较。效率很低，所以 mysql 中可以指定一个缓冲池的大小，缓冲池大的话可以同时加载多条驱动表的数据进行比较，放的数据条数越多性能 io 操作就越少，性能也就越好。所以，如果此时使用select * 放一些无用的列，只会白白的占用缓冲空间。浪费本可以提高性能的机会。</li><li>select _ 不是造成索引失效的直接原因 大部分原因是 where 后边条件的问题 但是还是尽量少去使用 select _ 多少还是会有影响的</li></ul><ol start="3"><li>使用函数</li></ol><p>在哪里使用函数？</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">explain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> select</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> leftaffix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>因为索引保存的是索引字段的原始值，而不是经过函数计算后的值，自然就没办法走索引了。</p><p>不过，从 MySQL 8.0 开始，索引特性增加了函数索引，即可以针对函数计算后的值建立一个索引，也就是说该索引的值是函数计算后的值，所以就可以通过扫描索引来查询数据。</p><ol start="4"><li>计算操作</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">explain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> select</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> leftaffix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 6</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>因为索引保存的是索引字段的原始值，而不是 b - 1 表达式计算后的值，所以无法走索引，只能通过把索引字段的取值都取出来，然后依次进行表达式的计算来进行条件判断，因此采用的就是全表扫描的方式。</p><p>总而言之 言而总之 只要是影响到索引列的值 索引就是失效</p><ol start="5"><li>Like %</li></ol><ul><li>%百分号通配符: 表示任何字符出现任意次数(可以是 0 次).</li><li>_下划线通配符: 表示只能匹配单个字符,不能多也不能少,就是一个字符.</li><li>like 操作符: LIKE 作用是指示 mysql 后面的搜索模式是利用通配符而不是直接相等匹配进行比较.</li></ul><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">explain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> select</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sname</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> student</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sname</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> like</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;学生%&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+---------+------------+-------+---------------+----------+---------+------+------+----------+--------------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">select_type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">partitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">possible_keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">filtered</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Extra</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+---------+------------+-------+---------------+----------+---------+------+------+----------+--------------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SIMPLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">联合索引</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">联合索引</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">62</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |   </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">100.00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+---------+------------+-------+---------------+----------+---------+------+------+----------+--------------------------+</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">explain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> select</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sname</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> student</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sname</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> like</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;学生%&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+---------+------------+-------+---------------+----------+---------+------+------+----------+--------------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">select_type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">partitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">possible_keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">filtered</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Extra</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                    |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+---------+------------+-------+---------------+----------+---------+------+------+----------+--------------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SIMPLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">student</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">联合索引</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">370</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">25.00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+---------+------------+-------+---------------+----------+---------+------+------+----------+--------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>索引的时候和查询范围关系也很大 范围过大造成索引没有意义从而失效的情况也不少</p><ol start="6"><li>使用 Or 导致索引失效</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">explain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> select</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> leftaffix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">select_type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">partitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">possible_keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">filtered</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Extra</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SIMPLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">leftaffix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ALL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">联合索引</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">57.14</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在where子句，如果在or前的条件列是索引列，而在or后的条件列不是索引列，那么索引会失效。</p><p>怎么优化？</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">explain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> select</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> leftaffix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> or</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+-------------+------------------+------------------+---------+------+------+----------+-------------------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">select_type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">partitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">possible_keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">              | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">filtered</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Extra</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">                                           |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+-------------+------------------+------------------+---------+------+------+----------+-------------------------------------------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SIMPLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">leftaffix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">index_merge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PRIMARY,联合索引</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">联合索引,PRIMARY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">5,4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |   </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">100.00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sort_union</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">联合索引,PRIMARY</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+-------------+------------------+------------------+---------+------+------+----------+-------------------------------------------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个优化方式就是在Or的时候两边都加上索引，就会使用索引，避免全表扫描</p><ol start="7"><li>in 使用不当</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mysql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">explain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> select</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> leftaffix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (1);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+----------+---------+-------+------+----------+-------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">select_type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">partitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">possible_keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">   | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">filtered</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Extra</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+----------+---------+-------+------+----------+-------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SIMPLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">leftaffix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">联合索引</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">联合索引</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |   </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">100.00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+----------+---------+-------+------+----------+-------+</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mysql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">explain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> select</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> leftaffix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (1,2,3,4,5);</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">select_type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">partitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">possible_keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">filtered</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Extra</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SIMPLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">leftaffix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ALL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">联合索引</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |   </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">100.00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> where</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+-------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先使用 In 不是一定会造成全表扫描的 IN 肯定会走索引，但是当 IN 的取值范围较大时会导致索引失效，走全表扫描</p><p>in 在结果集 大于 30%的时候索引失效</p><ol start="8"><li>not in 和 In 的失效场景相同</li><li>order By</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mysql</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">explain</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> select</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> e</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> leftaffix</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> order</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> by</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> b</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">select_type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">partitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">possible_keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">filtered</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Extra</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SIMPLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">leftaffix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ALL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |   </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">100.00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> filesort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这一个主要是 Mysql 自身优化的问题 我们都知道 OrderBy 是排序 那就代表我需要对数据进行排序 如果我走索引 索引是排好序的 但是我需要回表 消耗时间 另一种 我直接全表扫描排序 不用回表 也就是</p><ul><li>走索引 + 回表</li><li>不走索引 直接全表扫描 Mysql 认为直接全表扫面的速度比 回表的速度快所以就直接走索引了 在 Order By 的情况下 走全表扫描反而是更好的选择</li></ul><ol start="10"><li>总结</li></ol><p>查询范围过大导致失效</p><ul><li>Like %</li><li>Not in</li><li>In 更改字段造成失效</li><li>使用函数</li><li>计算操作 字段使用不确定导致索引失效</li><li>or 最优选择导致索引失效</li><li>order By 未遵循最左缀匹配原则 Select * 不会导致失效 降低效率</li><li>不会直接导致索引失效，因为回表的原因，会有查询效率上面的折扣</li></ul><h3 id="mysql执行计划分析" tabindex="-1"><a class="header-anchor" href="#mysql执行计划分析"><span>MySQL执行计划分析</span></a></h3><ol><li>什么是执行计划？</li></ol><p>用于SQL性能分析、优化等场景。</p><p>执行计划是指一条SQL语句在经过MySQL查询优化器的优化后，具体的执行方式</p><ol start="2"><li>如何获取执行计划？</li></ol><p>Explain + 语句</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">id</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SELECT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查询的序列标识符</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">select_type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SELECT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 关键字对应的查询类型</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">table</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 用到的表名</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">partitions</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 匹配的分区，对于未分区的表，值为</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NULL</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 表的访问方法</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">possible_keys</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 可能用到的索引</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 实际用到的索引</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key_len</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 所选索引的长度</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ref</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 当使用索引等值查询时，与索引作比较的列或常量</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rows</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 预计要读取的行数</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">filtered</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 按表条件过滤后，留存的记录数的百分比</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Extra</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 附加信息如何分析</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>如何分析EXPLAIN结果？三个比较重要的参数</li></ol><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">| </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">id</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">select_type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">table</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">     | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">partitions</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">possible_keys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key_len</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rows</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">filtered</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Extra</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">|  </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SIMPLE</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">leftaffix</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">       | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ALL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">          | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NULL</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |    </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |   </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">100.00</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Using</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> filesort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> |</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">+----+-------------+-----------+------------+------+---------------+------+---------+------+------+----------+----------------+</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">id:？SELECT标识符，用于标识每个SELECT语句的执行顺序。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">select_type:主要用于区分普通查询、联合查询、子查询等复杂的查询。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SIMPLE：简单查询，不包含</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UNION</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 或者子查询。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">PRIMARY：查询中如果包含子查询或其他部分，外层的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SELECT</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 将被标记为</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> PRIMARY。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">SUBQUERY：子查询中的第一个</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SELECT。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UNION：在</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> UNION</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 语句中，UNION</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 之后出现的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> SELECT。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">DERIVED：在</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> FROM</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 中出现的子查询将被标记为</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> DERIVED。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">UNION</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> RESULT：UNION</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 查询的结果。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">table：表名</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">type</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">（非常重要）：查询执行的类型，描述了查询是如何执行的。system</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">const</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">eq_ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ref</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">fulltext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ref_or_null</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">index_merge</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">unique_subquery</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">index_subquery</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">range</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">index</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">ALL</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">system：如果表使用的引擎对于表行数统计是精确的（如：MyISAM），且表中只有一行记录的情况下，访问方法是</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> system</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ，是</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> const</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 的一种特例。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">const：表中最多只有一行匹配的记录，一次查询就可以找到，常用于使用主键或唯一索引的所有字段作为查询条件。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">eq_ref：当连表查询时，前一张表的行在当前这张表中只有一行与之对应。是除了</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> system</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 与</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> const</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 之外最好的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> join</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 方式，常用于使用主键或唯一索引的所有字段作为连表条件。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ref：使用普通索引作为查询条件，查询结果可能找到多个符合条件的行。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">index_merge：当查询条件使用了多个索引时，表示开启了</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Index</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Merge</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 优化，此时执行计划中的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 列列出了使用到的索引。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">range：对索引列进行范围查询，执行计划中的</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> key</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 列表示哪个索引被使用了。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">index：查询遍历了整棵索引树，与</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ALL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 类似，只不过扫描的是索引，而索引一般在内存中，速度更快。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ALL：全表扫描。</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">possible_keys：表示</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 执行查询时可能用到的索引</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key（重要）：表示</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 实际使用到的索引。如果为</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> NULL，则表示未用到索引</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">key_len：key_len</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 列表示</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 实际使用的索引的最大长度；</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">rows：表示根据表统计信息及选用情况，大致估算出找到所需的记录或所需读取的行数</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Extra（重要）：这列包含了</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 解析查询的额外信息，通过这些信息，可以更准确的理解</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> MySQL</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 到底是如何执行查询的。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="redis-过期删除策略" tabindex="-1"><a class="header-anchor" href="#redis-过期删除策略"><span>Redis 过期删除策略</span></a></h3><p>这是Redis功能篇中的，使用的是[惰性删除 + 定期删除]，删除的对象是已过期的Key。</p><ol><li>不主动删除过期键，每次从数据库访问key时，都检测key是否过期，如果过期则删除该key</li><li>定期删除，每隔一段时间随机从数据库中取出一定数量的key进行筛查，并删除其中过期key</li></ol><h3 id="rabbitmq-的原理" tabindex="-1"><a class="header-anchor" href="#rabbitmq-的原理"><span>RabbitMQ 的原理</span></a></h3><ol><li>核心是消息队列，生产者将消息发送到队列，消费者从队列中接收并处理消息。队列遵循FIFO（先进先出）原则，确保消息按顺序处理。</li><li>生产者与消费者（负责创建并发送消息到队列 | 从队列中接收并处理消息）。</li><li>交换器：生产者不直接将消息发送到队列，而是通过交换器。交换器根据规则将消息路由到一个或多个队列。 <ul><li>Direct Exchange：基于路由键精确匹配。</li><li>Fanout Exchange：广播消息到所有绑定队列。</li><li>Topic Exchange：基于路由键的模式匹配。</li><li>Headers Exchange：基于消息头属性路由。</li></ul></li><li>绑定（Binding）：绑定是交换器和队列之间的连接，定义了消息如何从交换器路由到队列。</li><li>消息确认： <ul><li>生产者确认：生产者收到消息已到达交换器的确认。</li><li>消费者确认：消费者处理完消息后发送确认，RabbitMQ才会从队列中移除消息。</li></ul></li><li>持久化：为防止消息丢失，RabbitMQ 支持消息和队列的持久化，即使服务器重启，消息也不会丢失。</li><li>集群与高可用：RabbitMQ 支持集群模式，多个节点共享队列和交换器信息，提供高可用性和负载均衡。</li><li>插件机制：RabbitMQ 支持插件扩展，如管理界面、消息追踪等，增强其功能。</li></ol><h3 id="rabbitmq有什么交换机" tabindex="-1"><a class="header-anchor" href="#rabbitmq有什么交换机"><span>RabbitMQ有什么交换机</span></a></h3><p>RabbitMQ 常用的 Exchange Type 有 fanout、direct、topic、headers 这四种</p><p>广播交换器：将消息交给所有绑定到交换器的队列 将消息发送到所有绑定到该交换器的队列，忽略Routing key。</p><p>定向交换器：将消息交给符合指定Routing key的队列 将消息发送到与Routing key完全匹配的队列。</p><p>主题交换器：通配符，把消息交给符合Routing pattern（路由模式）的队列 根据Routing pattern（路由模式）将消息发送到匹配的队列，支持通配符。</p><h3 id="springbootapplication注解有了解过吗" tabindex="-1"><a class="header-anchor" href="#springbootapplication注解有了解过吗"><span>@SpringBootApplication注解有了解过吗</span></a></h3><p>@SpringBootApplication看作是 @Configuration、@EnableAutoConfiguration、@ComponentScan注解的集合</p><ul><li>@EnableAutoConfiguration 启动SpringBoot的自动配置机制</li><li>@ComponentScan 扫描被@Component（@Repository,@Service,@Controller）注解的Bean，注解默认会扫描该类所在的包下的所有类</li><li>@Configuration 允许在Spring上下文中注册额外的bean或导入其他配置类</li></ul><h3 id="componentscan默认扫描位置" tabindex="-1"><a class="header-anchor" href="#componentscan默认扫描位置"><span>@ComponentScan默认扫描位置</span></a></h3><p>默认扫描当前配置类所在的包及其子包。</p><p>可以通过 basePackages 或 basePackageClasses 指定扫描路径。</p><p>可以通过 excludeFilters 或 includeFilters 排除或包含特定组件。</p><p>在多模块或复杂项目中，显式配置 @ComponentScan 可以提高代码的可读性和可维护性。</p><h2 id="bedl" tabindex="-1"><a class="header-anchor" href="#bedl"><span>bedl</span></a></h2><h3 id="请你先介绍一下你的项目经历和业务" tabindex="-1"><a class="header-anchor" href="#请你先介绍一下你的项目经历和业务"><span>请你先介绍一下你的项目经历和业务</span></a></h3><p>单独开一篇，使用STAR法则</p><h3 id="rabbitmq的核心原理是什么" tabindex="-1"><a class="header-anchor" href="#rabbitmq的核心原理是什么"><span>RabbitMQ的核心原理是什么？</span></a></h3><p>如上</p><h3 id="项目代码管理是用的什么" tabindex="-1"><a class="header-anchor" href="#项目代码管理是用的什么"><span>项目代码管理是用的什么?</span></a></h3><p>Git</p><h3 id="你学过数据结构吗-有哪些算法-你可以介绍一下吗" tabindex="-1"><a class="header-anchor" href="#你学过数据结构吗-有哪些算法-你可以介绍一下吗"><span>你学过数据结构吗？有哪些算法，你可以介绍一下吗？</span></a></h3><ul><li>排序算法：快速排序、归并排序、堆排序等</li><li>搜索算法：二分查找、深度优先搜索、广度优先搜索</li><li>图算法：不了解，以后一定突击</li><li>动态规划：背包问题、最长公共子序列、最短路径问题</li></ul><h3 id="linux中的ubuntn你使用过哪些命令" tabindex="-1"><a class="header-anchor" href="#linux中的ubuntn你使用过哪些命令"><span>Linux中的ubuntn你使用过哪些命令？</span></a></h3><p>ls、cd、pwd、cp、mv、rm、cat、grep、chmod、ps、top</p><h3 id="你使用过docker吗-知道哪些命令-你能说说怎么部署nginx容器的吗" tabindex="-1"><a class="header-anchor" href="#你使用过docker吗-知道哪些命令-你能说说怎么部署nginx容器的吗"><span>你使用过Docker吗，知道哪些命令？你能说说怎么部署Nginx容器的吗</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">docker</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> run</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-p </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">80:80</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-p </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">443:443</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--name </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nginx</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/usr/local/nginx/html/blog:/usr/share/nginx/html</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/usr/local/nginx/conf/nginx.conf:/etc/nginx/nginx.conf</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/usr/local/nginx/conf/conf.d:/etc/nginx/conf.d</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/usr/local/nginx/log:/var/log/nginx</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-v </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">/usr/local/nginx/ssl:/etc/nginx/ssl</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">--privileged=true </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">-d</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --restart=always</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> \\</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">-d </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">nginx:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="你前端数据发送给后端-这个前端是怎么发送的" tabindex="-1"><a class="header-anchor" href="#你前端数据发送给后端-这个前端是怎么发送的"><span>你前端数据发送给后端，这个前端是怎么发送的?</span></a></h3><p>Axios</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" data-title="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">axios</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  method</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;get&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  url</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;https://jsonplaceholder.typicode.com/posts/1&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  params</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    id</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 123</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  },</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  headers</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &#39;X-Custom-Header&#39;</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;foobar&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">then</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">response</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">response</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">data</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">})</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">catch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">error</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> =&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">  console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;Error:&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">error</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="如果发生代码冲突了-你会怎么进行解决" tabindex="-1"><a class="header-anchor" href="#如果发生代码冲突了-你会怎么进行解决"><span>如果发生代码冲突了，你会怎么进行解决?</span></a></h3><p>我回答的没有问吧，我真厉害，哈哈哈哈哈</p><ol><li>git pull拉取远程代码或者git merge合并分支，如果发生冲突，Git会提示冲突信息。冲突文件会被标记为unmerged状态</li><li>打开冲突文件 你写的代码和其他人写的代码</li><li>解决冲突 <ol><li>手动解决，仔细阅读冲突部分，决定保留哪些代码</li><li>使用工具解决，使用Idea自带的冲突解决工具</li></ol></li><li>标记冲突已解决 git add 冲突文件</li><li>完成合并 <ol><li>如果在合并分支时发生的冲突，完成冲突解决后，继续合并：git commit</li><li>如果在拉取代码时发生的冲突，完成冲突解决后，继续拉去：git rebase --continue</li></ol></li><li>测试一下</li><li>提交代码 git push origin 分支名</li></ol><h3 id="数据库中的外键是什么意思-请你讲一下" tabindex="-1"><a class="header-anchor" href="#数据库中的外键是什么意思-请你讲一下"><span>数据库中的外键是什么意思，请你讲一下?</span></a></h3><p>外键是用于建立和强制表与表之间关系的一种约束。</p><p>外键指向另一个表的主键，确保数据的完整性和一致性。</p><p>例如，订单表中的用户ID可以是外键，指向用户表的主键，确保每个订单都对应一个有效的用户。</p><h3 id="linux是怎么查看路径下的硬盘大小" tabindex="-1"><a class="header-anchor" href="#linux是怎么查看路径下的硬盘大小"><span>Linux是怎么查看路径下的硬盘大小?</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">df</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -h</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /path/to/directory</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="你给哪些数据库备份过-请你说一下你是如何给mysql进行备份的-是用的什么命令还是工具" tabindex="-1"><a class="header-anchor" href="#你给哪些数据库备份过-请你说一下你是如何给mysql进行备份的-是用的什么命令还是工具"><span>你给哪些数据库备份过，请你说一下你是如何给mysql进行备份的，是用的什么命令还是工具</span></a></h3><p>我使用过MySQL的备份工具，常用的方法包括：</p><ul><li><strong>mysqldump</strong>：使用<code>mysqldump</code>命令备份数据库。例如：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mysqldump</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -u</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> username</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> database_name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &gt; </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">backup.sql</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><strong>自动化备份</strong>：使用cron定时任务定期执行备份脚本。</li><li><strong>工具</strong>：使用数据库连接工具Navicat将其导出</li></ul><h3 id="git中的git-stash命令有没有用过-是干什么的-你是怎么使用的" tabindex="-1"><a class="header-anchor" href="#git中的git-stash命令有没有用过-是干什么的-你是怎么使用的"><span>Git中的git stash命令有没有用过，是干什么的?你是怎么使用的？</span></a></h3><p>有时候我们需要切换到其他的分支，但是我现在的分支上有代码修改了，无法进行切换，所以我希望将这段代码临时保存一下</p><ol><li>临时切换分支</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> commit</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -m</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Fix Bug&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature-branch</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pop</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>保存未完成的更改</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> save</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;feature a&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> other-branch</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> checkout</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> feature-branch</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apply</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>清理存储条目</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> list</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> drop</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash@{</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> stash</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clear</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mongodb你在项目中是怎么使用的-简单的讲一下" tabindex="-1"><a class="header-anchor" href="#mongodb你在项目中是怎么使用的-简单的讲一下"><span>MongoDB你在项目中是怎么使用的？简单的讲一下?</span></a></h3><p>MongoDB是一种NoSQL数据库，通常用于存储非结构化或半结构化数据</p><ul><li>存储文档型数据：MongoDB以BSON格式存储数据，适合存储JSON类似的文档类型</li><li>高并发读写：MongoDB支持水平扩展，适合高并发读写的场景</li><li>灵活的模式设计：MongoDB不需要预先定义表结构，适合需要变化频繁的场景</li></ul><h3 id="docker容器的部署的几种方式-你知道哪些" tabindex="-1"><a class="header-anchor" href="#docker容器的部署的几种方式-你知道哪些"><span>Docker容器的部署的几种方式，你知道哪些？</span></a></h3><ol><li>单机部署</li><li>Docker Compose：通过docker-compse.yml文件定义多个容器的部署方式，适合本地开发和测试</li></ol><h3 id="设计数据库表的时候-有没有什么办法可以只查询一条数据-或者说剔除重复的数据" tabindex="-1"><a class="header-anchor" href="#设计数据库表的时候-有没有什么办法可以只查询一条数据-或者说剔除重复的数据"><span>设计数据库表的时候，有没有什么办法可以只查询一条数据，或者说剔除重复的数据</span></a></h3><ol><li>只查询一条数据 <ul><li>limit 1限制查询结果只返回一条数据</li><li>distinct去除重复的数据</li></ul></li><li>剔除重复数据 <ul><li>group by对某个字段进行分组，去除重复数据</li><li>distinct去除重复的行</li><li>row_number()窗口函数，配合partition by去除重复数据</li></ul></li></ol><h3 id="你对我们公司的业务有什么相关的了解吗" tabindex="-1"><a class="header-anchor" href="#你对我们公司的业务有什么相关的了解吗"><span>你对我们公司的业务有什么相关的了解吗？</span></a></h3><p>我觉得提前了解公司的业务领域、产品和服务，结合自己的经验和技能，来说明我如何能够为公司业务带来价值</p><h3 id="你知道哪些东西可以当作是缓存" tabindex="-1"><a class="header-anchor" href="#你知道哪些东西可以当作是缓存"><span>你知道哪些东西可以当作是缓存</span></a></h3><ol><li>内存缓存：如 Redis、Memcached。</li><li>浏览器缓存：如 HTTP 缓存头（Cache-Control、ETag 等）。</li><li>CDN 缓存：用于加速静态资源的访问。</li><li>数据库缓存：如 MySQL 的查询缓存（已废弃）、InnoDB 缓冲池。</li><li>应用级缓存：如 Spring Cache、Guava Cache。</li><li>分布式缓存：如 Redis Cluster、Hazelcast。</li></ol><h3 id="数据库的索引是怎么设计的或者说是怎么使用的" tabindex="-1"><a class="header-anchor" href="#数据库的索引是怎么设计的或者说是怎么使用的"><span>数据库的索引是怎么设计的或者说是怎么使用的?</span></a></h3><ol><li>索引设计：</li></ol><ul><li>单列索引</li><li>复合索引</li><li>唯一索引</li><li>全文索引</li></ul><ol start="2"><li>索引使用</li></ol><ul><li>在查询条件中使用索引字段，避免全表扫描</li><li>避免在索引列上使用函数或表达式，否则索引会失效</li><li>定期维护索引，删除不必要的索引以减少写操作的开销</li></ul><h3 id="在项目中你是怎么设计数据表的" tabindex="-1"><a class="header-anchor" href="#在项目中你是怎么设计数据表的"><span>在项目中你是怎么设计数据表的？</span></a></h3><ol><li>需求分析：明确业务需求，确定表的字段和关系</li><li>范式设计：遵循数据库设计范式（1NF、2NF、3NF）,避免数据冗余</li><li>主键设计：选择合适的字段作为主键</li><li>索引设计：根据查询需求创建合适的索引</li></ol><h3 id="springboot启动项你有了解过吗" tabindex="-1"><a class="header-anchor" href="#springboot启动项你有了解过吗"><span>SpringBoot启动项你有了解过吗</span></a></h3><p>SpringApplication类，它是Spring Boot应用的入口</p><ol><li>加载配置：读取application.yml文件</li><li>初始化上下文，创建ApplicationContext，加载Bean定义</li><li>执行Runner：执行 CommandLineRunner 或 ApplicationRunner。</li><li>启动内嵌服务器：如Tomcat、Jetty</li></ol><h2 id="tj" tabindex="-1"><a class="header-anchor" href="#tj"><span>tj</span></a></h2><h3 id="spring和springboot不熟悉" tabindex="-1"><a class="header-anchor" href="#spring和springboot不熟悉"><span>Spring和SpringBoot不熟悉</span></a></h3><p>Spring 是一个轻量级的 Java 开发框架，提供了依赖注入、AOP、事务管理等功能。Spring Boot 是 Spring 的扩展，简化了 Spring 应用的开发和部署，提供了自动配置、内嵌服务器等功能。</p><h3 id="springboot的自动装配原理" tabindex="-1"><a class="header-anchor" href="#springboot的自动装配原理"><span>SpringBoot的自动装配原理</span></a></h3><p>Spring Boot 的自动装配通过 @EnableAutoConfiguration 注解实现。它通过 spring.factories 文件加载自动配置类，根据类路径下的依赖自动配置 Bean。</p><h3 id="springboot-starter的原理以及怎么实现" tabindex="-1"><a class="header-anchor" href="#springboot-starter的原理以及怎么实现"><span>SpringBoot Starter的原理以及怎么实现</span></a></h3><p>Spring Boot Starter 的核心原理是基于 Spring Boot 的自动装配机制。</p><ol><li>依赖管理：Starter 是一个 Maven/Gradle 依赖，它封装了一组相关的依赖库。例如，spring-boot-starter-web 包含了 Spring MVC、Tomcat 等依赖。</li><li>自动配置：Spring Boot 通过 spring.factories 文件加载自动配置类。这些自动配置类会根据类路径下的依赖自动配置 Bean。</li><li>条件化配置：自动配置类使用 @Conditional 注解（如 @ConditionalOnClass、@ConditionalOnMissingBean）来决定是否创建某个 Bean。</li></ol><p>如何实现</p><ol><li>创建 Starter 项目： <ul><li>创建一个 Maven 项目，定义 pom.xml 文件，添加必要的依赖。</li><li>在 src/main/resources/META-INF 目录下创建 spring.factories 文件，指定自动配置类。</li></ul></li><li>编写自动配置类： <ul><li>创建一个配置类，使用 @Configuration 注解。</li><li>使用 @Conditional 注解控制 Bean 的创建。</li><li>通过 @EnableConfigurationProperties 加载配置属性。</li></ul></li><li>打包发布： <ul><li>将项目打包成 JAR 文件，发布到 Maven 仓库。</li></ul></li></ol><h3 id="redis当作缓存为什么如此快" tabindex="-1"><a class="header-anchor" href="#redis当作缓存为什么如此快"><span>Redis当作缓存为什么如此快？</span></a></h3><ol><li>基于内存：</li></ol><ul><li>Redis 数据存储在内存中，内存的读写速度远高于磁盘。</li><li>内存访问延迟通常在纳秒级别，而磁盘访问延迟在毫秒级别。</li></ul><ol start="2"><li>单线程模型：</li></ol><ul><li>Redis 使用单线程处理命令，避免了多线程的上下文切换和锁竞争。</li><li>单线程模型简化了数据结构的实现，提高了性能。</li></ul><ol start="3"><li>高效的数据结构：</li></ol><ul><li>Redis 提供了丰富的数据结构（如字符串、哈希、列表、集合、有序集合），这些数据结构经过高度优化，适合各种场景。</li></ul><ol start="4"><li>非阻塞 I/O：</li></ol><ul><li>Redis 使用非阻塞 I/O 模型，通过事件驱动机制处理多个客户端请求。</li></ul><ol start="5"><li>持久化机制：</li></ol><ul><li>Redis 支持 RDB 和 AOF 两种持久化方式，可以在不影响性能的情况下将数据持久化到磁盘。</li></ul><ol start="6"><li>分布式支持：</li></ol><ul><li>Redis 支持主从复制、哨兵模式和集群模式，适合高可用和高并发的场景。</li></ul><h3 id="redis和guava的区别" tabindex="-1"><a class="header-anchor" href="#redis和guava的区别"><span>Redis和Guava的区别</span></a></h3><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">特性	</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Redis</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">	Guava</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> Cache</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">存储位置	内存 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> 磁盘（支持持久化）	内存（仅限 JVM 内部）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">分布式支持	支持（通过 </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Redis</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> Cluster）	不支持（仅限于单机）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">数据结构	支持字符串、哈希、列表、集合、有序集合等	支持简单的键值对</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">性能	极高（基于内存 </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> 非阻塞 I</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">O）	高（基于内存，但受 JVM 限制）</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">持久化	支持 RDB 和 AOF	不支持</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">适用场景	分布式缓存、高并发场景	单机缓存、本地缓存</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">内存管理	支持 LRU、LFU 等淘汰策略	支持 LRU、最大容量限制</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">复杂度	需要部署和维护	无需额外部署，直接集成到应用中</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 使用 RedisTemplate 操作 Redis</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> RedisTemplate</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> void</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> setValue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> value) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">    redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">set</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key, value);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> getValue</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> key) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> redisTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">opsForValue</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">get</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(key);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 创建 Guava Cache</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Cache</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> String</span><span style="--shiki-light:#E45649;--shiki-dark:#ABB2BF;">&gt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> cache </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> CacheBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">newBuilder</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">maximumSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">1000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">expireAfterWrite</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">10</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">TimeUnit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">MINUTES</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    .</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">build</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 存入缓存</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">cache</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">put</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;key&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;value&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 获取缓存</span></span>
<span class="line"><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">String</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> value </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;"> cache</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getIfPresent</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;key&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Redis 适合分布式、高并发、大数据量的场景。</p><p>Guava Cache 适合单机、本地缓存、数据量较小的场景。</p><h3 id="mysql的索引数据结构-你知道多少" tabindex="-1"><a class="header-anchor" href="#mysql的索引数据结构-你知道多少"><span>MySQL的索引数据结构，你知道多少？</span></a></h3><ol><li>B+Tree：InnoDB的默认索引结构，适合范围查询</li><li>Hash：适合等值查询，但不支持范围查询</li><li>全文索引</li></ol><h3 id="bio-nio-aio-netty的区别" tabindex="-1"><a class="header-anchor" href="#bio-nio-aio-netty的区别"><span>BIO,NIO,AIO,Netty的区别</span></a></h3><ul><li>BIO:同步阻塞I/O，每一个连接需要一个线程处理</li><li>NIO:同步非阻塞I/O,使用多路复用器处理多个连接</li><li>AIO:异常非阻塞I/O,基于时间回调</li><li>Netty:基于NIO的高性能网络框架，简化了NIO的编程</li></ul><h3 id="如何从-5-亿个数中找出中位数" tabindex="-1"><a class="header-anchor" href="#如何从-5-亿个数中找出中位数"><span>如何从 5 亿个数中找出中位数？</span></a></h3><p>分治法</p><h3 id="如何在大量的数据中判断一个数是否存在" tabindex="-1"><a class="header-anchor" href="#如何在大量的数据中判断一个数是否存在"><span>如何在大量的数据中判断一个数是否存在？</span></a></h3><p>分治法</p><h3 id="transformer" tabindex="-1"><a class="header-anchor" href="#transformer"><span>transformer</span></a></h3><p>Transformer 是一种在自然语言处理（NLP）领域中广泛使用的深度学习模型架构，它最早由 Vaswani 等人在2017年的论文《Attention is All You Need》中提出。这个架构引入了一种全新的机制——自注意力机制（self-attention mechanism），用于处理序列数据，尤其是文本数据。与之前主要依赖于循环神经网络（RNN）或卷积神经网络（CNN）的模型相比，Transformer 模型能够更高效地并行处理序列信息，并且在多种任务上取得了当时最佳的表现。</p><p>关键特性</p><ul><li>自注意力机制：允许模型在处理一个位置上的词语时，可以考虑到句子中的所有其他词语。这有助于捕捉长距离依赖关系。</li><li>位置编码：由于Transformer不包含递归和卷积结构，为了利用序列中元素的顺序信息，输入嵌入被加上了位置编码。</li><li>多头注意力（Multi-head Attention）：不是只计算一次注意力，而是并行地执行多次注意力计算，每个都使用不同的学习参数集。这样可以让模型关注到不同子空间下的信息。</li><li>前馈神经网络：每个位置的输出通过相同的前馈网络，但这些网络之间没有交互。</li></ul><p>应用场景</p><p>Transformer 架构及其变体（如 BERT, GPT 系列等）已经成为了许多NLP任务的基础，包括但不限于机器翻译、文本摘要、问答系统、情感分析等。此外，Transformer 的概念也被扩展到了计算机视觉等领域，显示了其广泛的适用性。</p><p>总的来说，Transformer 通过提供一种强大的方式来理解和生成人类语言，极大地推动了人工智能领域的进步。</p><h3 id="cookie-session-token" tabindex="-1"><a class="header-anchor" href="#cookie-session-token"><span>cookie session token</span></a></h3><ol><li>Cookie</li></ol><ul><li>定义：由服务器生成发送到客户端（浏览器）的小型数据键值对片段，存储再客户端本地。</li><li>特点：自动携带（浏览器每次请求时都会自动附加Cookie） 生命周期（可设置过期时间或会话结束后失效）</li><li>用途：会话管理，用户偏好记录</li></ul><ol start="2"><li>Seesion</li></ol><ul><li>定义：服务器存储的用户会话数据，与客户端的唯一标识绑定，通常通过Cookie传递</li><li>特点：服务器存储 依赖Cookie 无状态Http</li><li>流程：1.用户登录-&gt;服务器创建Session-&gt;返回SessionID给客户端（通过Cookie）。2.客户端后续请求都会请求携带Session ID服务器校验并关联用户数据</li></ul><ol start="3"><li>Token（如JWT）</li></ol><ul><li><p>定义：一种自包含的令牌，如将用户信息、签名、过期时间等编码为字符串，由客户端存储并请求时发送</p></li><li><p>特点：无状态 跨域支持 客户端存储</p></li><li><p>流程：1.用户登录-&gt;服务器生成Token（如JWT）返回给客户端2.客户端后续请求在Authorization头携带Token（如Bearer Token）3.服务器验证Token签名及有效期</p></li><li><p>传统 Web 应用：Cookie + Session（简单且安全）。</p></li><li><p>单页应用（SPA）/移动端：Token（如 JWT）更灵活。</p></li><li><p>跨域/微服务：Token（避免 Cookie 跨域限制）。</p></li><li><p>高安全性场景：Session + Cookie（HttpOnly + Secure）。</p></li></ul><h3 id="http是哪一层" tabindex="-1"><a class="header-anchor" href="#http是哪一层"><span>http是哪一层</span></a></h3><p>属于计算机网络协议中的应用层</p><p>HTTP 作为应用层协议，负责定义客户端与服务器之间的通信规则（如请求方法、状态码），而底层协议（如 TCP/IP）负责确保数据可靠传输到目标地址。</p><h3 id="arp是干什么的" tabindex="-1"><a class="header-anchor" href="#arp是干什么的"><span>arp是干什么的</span></a></h3><p>地址解析协议，用于将ip地址解析为mac地址，以便在局域网中实现设备之间的通信。</p><h3 id="dns是干什么的" tabindex="-1"><a class="header-anchor" href="#dns是干什么的"><span>dns是干什么的</span></a></h3><p>域名系统，用于将域名解析为ip地址，方便用户通过易记的域名访问网络资源</p><h3 id="多线程如何保证顺序运行或者说共享进程不受影响" tabindex="-1"><a class="header-anchor" href="#多线程如何保证顺序运行或者说共享进程不受影响"><span>多线程如何保证顺序运行或者说共享进程不受影响</span></a></h3><ol><li>互斥锁（Mutex）</li><li>读写锁（ReadWrite Lock）</li><li>原子操作</li><li>线程局部存储（Thread Local Storage, TLS）</li></ol><h3 id="加解密手段和默认加密方法" tabindex="-1"><a class="header-anchor" href="#加解密手段和默认加密方法"><span>加解密手段和默认加密方法</span></a></h3><p>对称加密（AES）、非对称加密（RSA）、哈希算法（SHA-256）</p><h2 id="tzsr" tabindex="-1"><a class="header-anchor" href="#tzsr"><span>tzsr</span></a></h2><h3 id="线程池有两种-你讲一下第二种" tabindex="-1"><a class="header-anchor" href="#线程池有两种-你讲一下第二种"><span>线程池有两种，你讲一下第二种</span></a></h3><p>ThreadPoolExecutor：Java 提供的线程池实现，支持自定义核心线程数、最大线程数、队列等。</p><p>ForkJoinPool：适合处理分治任务的线程池，支持工作窃取算法。</p><h3 id="mysql中事务、索引、锁机制的了解-和一些sql优化语句" tabindex="-1"><a class="header-anchor" href="#mysql中事务、索引、锁机制的了解-和一些sql优化语句"><span>MySQL中事务、索引、锁机制的了解 和一些SQL优化语句</span></a></h3><p>事务：通过 BEGIN、COMMIT、ROLLBACK 控制事务的原子性、一致性、隔离性、持久性。</p><p>索引：通过创建合适的索引提高查询性能。</p><p>锁机制：包括行锁、表锁、乐观锁、悲观锁。</p><p>SQL 优化：</p><p>避免使用 SELECT *。</p><p>使用 EXPLAIN 分析查询计划。</p><p>避免在 WHERE 子句中使用函数。</p><h3 id="nacos为什么修改配置之后不用重启服务器就可以更改配置了" tabindex="-1"><a class="header-anchor" href="#nacos为什么修改配置之后不用重启服务器就可以更改配置了"><span>Nacos为什么修改配置之后不用重启服务器就可以更改配置了</span></a></h3><p>Nacos 通过长轮询或 WebSocket 实时推送配置变更，应用可以通过监听配置变化动态更新配置，无需重启。</p><h3 id="redis中的常见数据结构" tabindex="-1"><a class="header-anchor" href="#redis中的常见数据结构"><span>Redis中的常见数据结构</span></a></h3><p>String、List、Set、Hash、ZSet</p><h3 id="jvm的基础知识" tabindex="-1"><a class="header-anchor" href="#jvm的基础知识"><span>JVM的基础知识</span></a></h3><p>内存结构：包括堆、栈、方法区、本地方法栈、程序计数器。</p><p>垃圾回收：包括新生代、老年代、GC 算法（如标记-清除、复制、标记-整理）。</p><p>类加载机制：包括加载、验证、准备、解析、初始化。</p><h3 id="布隆过滤器实现的原理-里面用的是什么数据结构" tabindex="-1"><a class="header-anchor" href="#布隆过滤器实现的原理-里面用的是什么数据结构"><span>布隆过滤器实现的原理，里面用的是什么数据结构</span></a></h3><p>布隆过滤器通过多个哈希函数将元素映射到位数组中，用于判断元素是否存在。</p><p>它使用位数组和哈希函数实现。</p><h3 id="缓存穿透、缓存击穿、缓存雪崩的问题以及解决方法" tabindex="-1"><a class="header-anchor" href="#缓存穿透、缓存击穿、缓存雪崩的问题以及解决方法"><span>缓存穿透、缓存击穿、缓存雪崩的问题以及解决方法</span></a></h3><ul><li>缓存穿透：查询不存在的数据，解决方法：使用布隆过滤器或缓存空值。</li><li>缓存击穿：热点数据失效，解决方法：使用互斥锁或永不过期。</li><li>缓存雪崩：大量缓存同时失效，解决方法：设置不同的过期时间或使用高可用缓存集群。</li></ul><h3 id="介绍一下雪花算法-和实现的原理" tabindex="-1"><a class="header-anchor" href="#介绍一下雪花算法-和实现的原理"><span>介绍一下雪花算法，和实现的原理</span></a></h3><p>雪花算法（Snowflake）是 Twitter 开源的分布式 ID 生成算法，生成 64 位的 ID，包含时间戳、机器 ID、序列号等部分。</p><h3 id="jwt令牌技术和threadlocal配合拦截器的意义是什么" tabindex="-1"><a class="header-anchor" href="#jwt令牌技术和threadlocal配合拦截器的意义是什么"><span>JWT令牌技术和ThreadLocal配合拦截器的意义是什么</span></a></h3><p>JWT（JSON Web Token）用于无状态认证，ThreadLocal 用于在同一个线程中共享数据。拦截器可以在请求处理前后进行身份验证和数据传递。</p><h3 id="springcache-redis的技术介绍一下" tabindex="-1"><a class="header-anchor" href="#springcache-redis的技术介绍一下"><span>SpringCache + Redis的技术介绍一下</span></a></h3><p>Spring Cache 提供了缓存抽象，支持多种缓存实现（如 Redis）。通过注解（如 @Cacheable、@CacheEvict）可以方便地管理缓存。</p><h3 id="springtask定时任务处理" tabindex="-1"><a class="header-anchor" href="#springtask定时任务处理"><span>SpringTask定时任务处理</span></a></h3><p>Spring Task 提供了简单的定时任务支持，通过 @Scheduled 注解可以定义任务的执行时间。</p><h3 id="hashmap的详细原理和介绍" tabindex="-1"><a class="header-anchor" href="#hashmap的详细原理和介绍"><span>HashMap的详细原理和介绍</span></a></h3><p>HashMap 是基于哈希表实现的键值对存储结构，通过哈希函数计算键的存储位置，支持快速的插入、删除、查找操作。</p><h3 id="juc并发编程知道哪些" tabindex="-1"><a class="header-anchor" href="#juc并发编程知道哪些"><span>JUC并发编程知道哪些</span></a></h3><p>JUC（Java Util Concurrent）提供了并发编程的工具类，包括：</p><p>线程池：如 ThreadPoolExecutor。</p><p>锁：如 ReentrantLock。</p><p>并发集合：如 ConcurrentHashMap。</p><p>原子类：如 AtomicInteger。</p><h3 id="jvm基础知识了解吗" tabindex="-1"><a class="header-anchor" href="#jvm基础知识了解吗"><span>JVM基础知识了解吗</span></a></h3><p>JVM 是 Java 虚拟机，负责执行 Java 字节码。其核心组件包括类加载器、运行时数据区、执行引擎、垃圾回收器等。</p><h3 id="spring和springboot的区别和优点是什么-spring-mvc和他们的关系是什么" tabindex="-1"><a class="header-anchor" href="#spring和springboot的区别和优点是什么-spring-mvc和他们的关系是什么"><span>Spring和SpringBoot的区别和优点是什么，Spring MVC和他们的关系是什么</span></a></h3><p>Spring：是一个轻量级的 Java 开发框架，提供了依赖注入、AOP 等功能。</p><p>Spring Boot：是 Spring 的扩展，简化了 Spring 应用的开发和部署，提供了自动配置、内嵌服务器等功能。</p><p>Spring MVC：是 Spring 的一个模块，用于开发 Web 应用。</p><h3 id="了解微服务的基本框架吗-简单介绍一下微服务架构" tabindex="-1"><a class="header-anchor" href="#了解微服务的基本框架吗-简单介绍一下微服务架构"><span>了解微服务的基本框架吗，简单介绍一下微服务架构</span></a></h3><p>Spring Cloud：提供了服务发现、配置管理、负载均衡等功能。</p><p>Dubbo：阿里巴巴开源的 RPC 框架。</p><h2 id="顺丰-java岗" tabindex="-1"><a class="header-anchor" href="#顺丰-java岗"><span>顺丰-Java岗</span></a></h2><h3 id="自我介绍" tabindex="-1"><a class="header-anchor" href="#自我介绍"><span>自我介绍</span></a></h3><p>个人介绍</p><h3 id="你的项目是怎么实现的" tabindex="-1"><a class="header-anchor" href="#你的项目是怎么实现的"><span>你的项目是怎么实现的？</span></a></h3><p>后端是基于什么的，前端是基于什么的，数据库用的是什么</p><h3 id="你平时写页面写的多吗-你项目的数据库表是怎么设计的-数据库怎么查询-怎么查看数据库引擎" tabindex="-1"><a class="header-anchor" href="#你平时写页面写的多吗-你项目的数据库表是怎么设计的-数据库怎么查询-怎么查看数据库引擎"><span>你平时写页面写的多吗？你项目的数据库表是怎么设计的？数据库怎么查询？怎么查看数据库引擎？</span></a></h3><p>主要专注于后端开发。</p><p>根据业务需求进行规范化设计，通常包含主键、外键、索引等。</p><p>数据库查询，使用SQL语句进行查询。</p><p>查看数据库引擎，MySQL的命令show engines;</p><h3 id="怎么查看数据库日志-日志类型有哪些-简述一下-怎么优化数据库性能" tabindex="-1"><a class="header-anchor" href="#怎么查看数据库日志-日志类型有哪些-简述一下-怎么优化数据库性能"><span>怎么查看数据库日志，日志类型有哪些，简述一下？怎么优化数据库性能</span></a></h3><p>查看数据库日志，MySQL有show variables like &#39;log_error&#39;,也可以直接在linux上面直接tail 和 cat 命令直接查看MySQL的日志文件</p><p>日志类型有错误日志、查询日志、事务日志、慢查询日志</p><p>优化数据库性能：使用索引、优化SQL查询、分区表、缓存常用数据、定期维护和清理数据库</p><h3 id="数据库索引有了解吗-为什么要用索引-你的项目什么地方用了索引-怎么保证线程安全" tabindex="-1"><a class="header-anchor" href="#数据库索引有了解吗-为什么要用索引-你的项目什么地方用了索引-怎么保证线程安全"><span>数据库索引有了解吗？为什么要用索引？你的项目什么地方用了索引？怎么保证线程安全？</span></a></h3><p>索引：用于加快数据检索速度的数据结构</p><p>为什么用索引：提高查询效率，减少全表扫描</p><p>项目中使用索引：在经常查询的字段上创建索引，如用户表的user_id</p><p>保证线程安全：使用事务、锁机制（如行锁、表锁）和并发控制</p><h3 id="谈谈数据库索引的底层结构" tabindex="-1"><a class="header-anchor" href="#谈谈数据库索引的底层结构"><span>谈谈数据库索引的底层结构？</span></a></h3><p>MySQL InnoDB使用的是B+树，最常用的索引数据，适用于范围查询和排序</p><p>哈希索引：适用于等值查询，但不支持范围查询</p><p>全文索引：用于文本搜索</p><h3 id="你说你项目是基于springboot实现的-那你说说springboot自动装配原理" tabindex="-1"><a class="header-anchor" href="#你说你项目是基于springboot实现的-那你说说springboot自动装配原理"><span>你说你项目是基于SpringBoot实现的，那你说说SpringBoot自动装配原理</span></a></h3><p>SpringBoot通过@EnableAutoConfiguration注解和spring.factories文件实现自动装配。它根据类路径下的依赖自动配置Bean</p><h3 id="springboot的starter有了解过吗-如何理解starter" tabindex="-1"><a class="header-anchor" href="#springboot的starter有了解过吗-如何理解starter"><span>SpringBoot的Starter有了解过吗？如何理解Starter？</span></a></h3><p>SpirngBoot提供的依赖描述符，简化依赖管理和配置。例如spring-boot-starter-web包含了开发Web应用所需要的依赖</p><h3 id="你用过springboot-那你肯定了解spring了-那来谈谈spring的核心" tabindex="-1"><a class="header-anchor" href="#你用过springboot-那你肯定了解spring了-那来谈谈spring的核心"><span>你用过SpringBoot？那你肯定了解Spring了，那来谈谈Spring的核心</span></a></h3><p>Spring核心：</p><ul><li>IOC(控制反转)：通过依赖注入管理对象生命周期</li><li>AOP(面向切面编程)：通过代理实现横切关注点的模块化</li></ul><h3 id="spring中有哪些设计模式" tabindex="-1"><a class="header-anchor" href="#spring中有哪些设计模式"><span>Spring中有哪些设计模式？</span></a></h3><ul><li>单例模式：Bean默认是单例的</li><li>工厂模式：BeanFactory</li><li>代理模式：AOP</li><li>模板方法模式：JDBCTemplate</li></ul><h3 id="spring中所有对象都是单例的吗" tabindex="-1"><a class="header-anchor" href="#spring中所有对象都是单例的吗"><span>Spring中所有对象都是单例的吗？</span></a></h3><p>不是，Spring的Bean默认是单例的，但可以通过@Scope注解配置为原型（prototype）等作用域。</p><h3 id="你使用spring的时候有没有想过它是怎么运行的" tabindex="-1"><a class="header-anchor" href="#你使用spring的时候有没有想过它是怎么运行的"><span>你使用Spring的时候有没有想过它是怎么运行的？</span></a></h3><p>运行机制：Spring通过IOC容器管理Bean的生命周期，通过AOP实现横切关注点，通过配置文件或注解进行配置</p><h3 id="你熟悉jvm是吧-来描述一下jvm的垃圾回收机制" tabindex="-1"><a class="header-anchor" href="#你熟悉jvm是吧-来描述一下jvm的垃圾回收机制"><span>你熟悉jvm是吧？来描述一下jvm的垃圾回收机制？</span></a></h3><p>JVM通过垃圾回收期（GC）自动管理内存，常见的GC算法有标记-清除、标记-整理、复制算法等</p><h3 id="既然看你这么会-那我问你什么jvm进行垃圾回收的时候会不会影响到我们的业务" tabindex="-1"><a class="header-anchor" href="#既然看你这么会-那我问你什么jvm进行垃圾回收的时候会不会影响到我们的业务"><span>既然看你这么会，那我问你什么jvm进行垃圾回收的时候会不会影响到我们的业务</span></a></h3><p>垃圾回收会暂停应用线程，影响业务性能。可以通过调优GC参数减少影响</p><h3 id="你知道java中有哪些工具类吗" tabindex="-1"><a class="header-anchor" href="#你知道java中有哪些工具类吗"><span>你知道java中有哪些工具类吗？</span></a></h3><p>工具类：Collections、Arrays、StringUtils、DateUtils</p><h3 id="那你说说java集合有哪些-他们有什么用" tabindex="-1"><a class="header-anchor" href="#那你说说java集合有哪些-他们有什么用"><span>那你说说java集合有哪些？他们有什么用？</span></a></h3><p>集合：</p><p>List：有序、可重复，如 ArrayList, LinkedList。</p><p>Set：无序、不可重复，如 HashSet, TreeSet。</p><p>Map：键值对，如 HashMap, TreeMap。</p><h3 id="那你说说你最熟悉的集合类型" tabindex="-1"><a class="header-anchor" href="#那你说说你最熟悉的集合类型"><span>那你说说你最熟悉的集合类型</span></a></h3><p>最熟悉的集合：ArrayList，基于动态数组实现，支持快速随机访问。</p><h3 id="那你知道linkedlist创建的时候-初试的容量是多少吗" tabindex="-1"><a class="header-anchor" href="#那你知道linkedlist创建的时候-初试的容量是多少吗"><span>那你知道LinkedList创建的时候，初试的容量是多少吗？</span></a></h3><p>初始容量：LinkedList 没有初始容量概念，它是基于链表实现的，动态增长。</p><h3 id="了解过哪些算法-比如贪心-快速排序之类的" tabindex="-1"><a class="header-anchor" href="#了解过哪些算法-比如贪心-快速排序之类的"><span>了解过哪些算法，比如贪心，快速排序之类的？</span></a></h3><p>贪心算法：每一步选择当前最优解，希望最终得到全局最优解。</p><p>快速排序：通过选择一个基准元素，将数组分为两部分，递归排序。</p><p>其他算法：如动态规划、分治法、回溯算法等。</p>`,335)]))}const d=i(h,[["render",k],["__file","now.html.vue"]]),r=JSON.parse('{"path":"/tech/now.html","title":"复盘","lang":"zh-CN","frontmatter":{"title":"复盘","description":"相关信息 胜不骄，败不馁 我最大的敌人就是我自己 心比天高，眼高手低 菜就是菜，不要给自己找借口 将所有相关的场景都自己去实现一遍 zh Linux 中查看占用内存命令 我的看法是重点关注：%Cpu(s)（特别是 us 和 sy）、MiB Mem（特别是 used 和 avail Mem）、Swap（特别是 used）、进程列表中的 %CPU 和 %M...","icon":"","date":"2025-03-08T00:00:00.000Z","category":["复盘"],"tag":["复盘"],"head":[["meta",{"property":"og:url","content":"https://he9.xin/tech/now.html"}],["meta",{"property":"og:site_name","content":"春风不语即随本心"}],["meta",{"property":"og:title","content":"复盘"}],["meta",{"property":"og:description","content":"相关信息 胜不骄，败不馁 我最大的敌人就是我自己 心比天高，眼高手低 菜就是菜，不要给自己找借口 将所有相关的场景都自己去实现一遍 zh Linux 中查看占用内存命令 我的看法是重点关注：%Cpu(s)（特别是 us 和 sy）、MiB Mem（特别是 used 和 avail Mem）、Swap（特别是 used）、进程列表中的 %CPU 和 %M..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-23T09:17:42.000Z"}],["meta",{"property":"article:author","content":"ErenJaegerKing"}],["meta",{"property":"article:tag","content":"复盘"}],["meta",{"property":"article:published_time","content":"2025-03-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-23T09:17:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"复盘\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-08T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-23T09:17:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ErenJaegerKing\\",\\"url\\":\\"https://he9.xin\\",\\"email\\":\\"erenjaegerking@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"zh","slug":"zh","link":"#zh","children":[{"level":3,"title":"Linux 中查看占用内存命令","slug":"linux-中查看占用内存命令","link":"#linux-中查看占用内存命令","children":[]},{"level":3,"title":"Linux 包括查看特定应用命令","slug":"linux-包括查看特定应用命令","link":"#linux-包括查看特定应用命令","children":[]},{"level":3,"title":"Linux 中查看 8080 端口是否被占用","slug":"linux-中查看-8080-端口是否被占用","link":"#linux-中查看-8080-端口是否被占用","children":[]},{"level":3,"title":"Java -jar 命令可以在后台运行吗","slug":"java-jar-命令可以在后台运行吗","link":"#java-jar-命令可以在后台运行吗","children":[]},{"level":3,"title":"Dockerfile 怎么部署 Jar","slug":"dockerfile-怎么部署-jar","link":"#dockerfile-怎么部署-jar","children":[]},{"level":3,"title":"Dockerfile 常见的模块（指令）及其作用","slug":"dockerfile-常见的模块-指令-及其作用","link":"#dockerfile-常见的模块-指令-及其作用","children":[]},{"level":3,"title":"MySQL 你是怎么配置的","slug":"mysql-你是怎么配置的","link":"#mysql-你是怎么配置的","children":[]},{"level":3,"title":"Redis 你是怎么配置的","slug":"redis-你是怎么配置的","link":"#redis-你是怎么配置的","children":[]},{"level":3,"title":"线程池你有使用过吗，有几个重要的参数，你有什么了解过吗","slug":"线程池你有使用过吗-有几个重要的参数-你有什么了解过吗","link":"#线程池你有使用过吗-有几个重要的参数-你有什么了解过吗","children":[]},{"level":3,"title":"Varchar 和 Char 之间的关系你有了解过吗","slug":"varchar-和-char-之间的关系你有了解过吗","link":"#varchar-和-char-之间的关系你有了解过吗","children":[]},{"level":3,"title":"MySQL 设计数据库表的时候怎么使用常见的数据结构","slug":"mysql-设计数据库表的时候怎么使用常见的数据结构","link":"#mysql-设计数据库表的时候怎么使用常见的数据结构","children":[]},{"level":3,"title":"MySQL 索引失效的问题你有了解过吗","slug":"mysql-索引失效的问题你有了解过吗","link":"#mysql-索引失效的问题你有了解过吗","children":[]},{"level":3,"title":"MySQL执行计划分析","slug":"mysql执行计划分析","link":"#mysql执行计划分析","children":[]},{"level":3,"title":"Redis 过期删除策略","slug":"redis-过期删除策略","link":"#redis-过期删除策略","children":[]},{"level":3,"title":"RabbitMQ 的原理","slug":"rabbitmq-的原理","link":"#rabbitmq-的原理","children":[]},{"level":3,"title":"RabbitMQ有什么交换机","slug":"rabbitmq有什么交换机","link":"#rabbitmq有什么交换机","children":[]},{"level":3,"title":"@SpringBootApplication注解有了解过吗","slug":"springbootapplication注解有了解过吗","link":"#springbootapplication注解有了解过吗","children":[]},{"level":3,"title":"@ComponentScan默认扫描位置","slug":"componentscan默认扫描位置","link":"#componentscan默认扫描位置","children":[]}]},{"level":2,"title":"bedl","slug":"bedl","link":"#bedl","children":[{"level":3,"title":"请你先介绍一下你的项目经历和业务","slug":"请你先介绍一下你的项目经历和业务","link":"#请你先介绍一下你的项目经历和业务","children":[]},{"level":3,"title":"RabbitMQ的核心原理是什么？","slug":"rabbitmq的核心原理是什么","link":"#rabbitmq的核心原理是什么","children":[]},{"level":3,"title":"项目代码管理是用的什么?","slug":"项目代码管理是用的什么","link":"#项目代码管理是用的什么","children":[]},{"level":3,"title":"你学过数据结构吗？有哪些算法，你可以介绍一下吗？","slug":"你学过数据结构吗-有哪些算法-你可以介绍一下吗","link":"#你学过数据结构吗-有哪些算法-你可以介绍一下吗","children":[]},{"level":3,"title":"Linux中的ubuntn你使用过哪些命令？","slug":"linux中的ubuntn你使用过哪些命令","link":"#linux中的ubuntn你使用过哪些命令","children":[]},{"level":3,"title":"你使用过Docker吗，知道哪些命令？你能说说怎么部署Nginx容器的吗","slug":"你使用过docker吗-知道哪些命令-你能说说怎么部署nginx容器的吗","link":"#你使用过docker吗-知道哪些命令-你能说说怎么部署nginx容器的吗","children":[]},{"level":3,"title":"你前端数据发送给后端，这个前端是怎么发送的?","slug":"你前端数据发送给后端-这个前端是怎么发送的","link":"#你前端数据发送给后端-这个前端是怎么发送的","children":[]},{"level":3,"title":"如果发生代码冲突了，你会怎么进行解决?","slug":"如果发生代码冲突了-你会怎么进行解决","link":"#如果发生代码冲突了-你会怎么进行解决","children":[]},{"level":3,"title":"数据库中的外键是什么意思，请你讲一下?","slug":"数据库中的外键是什么意思-请你讲一下","link":"#数据库中的外键是什么意思-请你讲一下","children":[]},{"level":3,"title":"Linux是怎么查看路径下的硬盘大小?","slug":"linux是怎么查看路径下的硬盘大小","link":"#linux是怎么查看路径下的硬盘大小","children":[]},{"level":3,"title":"你给哪些数据库备份过，请你说一下你是如何给mysql进行备份的，是用的什么命令还是工具","slug":"你给哪些数据库备份过-请你说一下你是如何给mysql进行备份的-是用的什么命令还是工具","link":"#你给哪些数据库备份过-请你说一下你是如何给mysql进行备份的-是用的什么命令还是工具","children":[]},{"level":3,"title":"Git中的git stash命令有没有用过，是干什么的?你是怎么使用的？","slug":"git中的git-stash命令有没有用过-是干什么的-你是怎么使用的","link":"#git中的git-stash命令有没有用过-是干什么的-你是怎么使用的","children":[]},{"level":3,"title":"MongoDB你在项目中是怎么使用的？简单的讲一下?","slug":"mongodb你在项目中是怎么使用的-简单的讲一下","link":"#mongodb你在项目中是怎么使用的-简单的讲一下","children":[]},{"level":3,"title":"Docker容器的部署的几种方式，你知道哪些？","slug":"docker容器的部署的几种方式-你知道哪些","link":"#docker容器的部署的几种方式-你知道哪些","children":[]},{"level":3,"title":"设计数据库表的时候，有没有什么办法可以只查询一条数据，或者说剔除重复的数据","slug":"设计数据库表的时候-有没有什么办法可以只查询一条数据-或者说剔除重复的数据","link":"#设计数据库表的时候-有没有什么办法可以只查询一条数据-或者说剔除重复的数据","children":[]},{"level":3,"title":"你对我们公司的业务有什么相关的了解吗？","slug":"你对我们公司的业务有什么相关的了解吗","link":"#你对我们公司的业务有什么相关的了解吗","children":[]},{"level":3,"title":"你知道哪些东西可以当作是缓存","slug":"你知道哪些东西可以当作是缓存","link":"#你知道哪些东西可以当作是缓存","children":[]},{"level":3,"title":"数据库的索引是怎么设计的或者说是怎么使用的?","slug":"数据库的索引是怎么设计的或者说是怎么使用的","link":"#数据库的索引是怎么设计的或者说是怎么使用的","children":[]},{"level":3,"title":"在项目中你是怎么设计数据表的？","slug":"在项目中你是怎么设计数据表的","link":"#在项目中你是怎么设计数据表的","children":[]},{"level":3,"title":"SpringBoot启动项你有了解过吗","slug":"springboot启动项你有了解过吗","link":"#springboot启动项你有了解过吗","children":[]}]},{"level":2,"title":"tj","slug":"tj","link":"#tj","children":[{"level":3,"title":"Spring和SpringBoot不熟悉","slug":"spring和springboot不熟悉","link":"#spring和springboot不熟悉","children":[]},{"level":3,"title":"SpringBoot的自动装配原理","slug":"springboot的自动装配原理","link":"#springboot的自动装配原理","children":[]},{"level":3,"title":"SpringBoot Starter的原理以及怎么实现","slug":"springboot-starter的原理以及怎么实现","link":"#springboot-starter的原理以及怎么实现","children":[]},{"level":3,"title":"Redis当作缓存为什么如此快？","slug":"redis当作缓存为什么如此快","link":"#redis当作缓存为什么如此快","children":[]},{"level":3,"title":"Redis和Guava的区别","slug":"redis和guava的区别","link":"#redis和guava的区别","children":[]},{"level":3,"title":"MySQL的索引数据结构，你知道多少？","slug":"mysql的索引数据结构-你知道多少","link":"#mysql的索引数据结构-你知道多少","children":[]},{"level":3,"title":"BIO,NIO,AIO,Netty的区别","slug":"bio-nio-aio-netty的区别","link":"#bio-nio-aio-netty的区别","children":[]},{"level":3,"title":"如何从 5 亿个数中找出中位数？","slug":"如何从-5-亿个数中找出中位数","link":"#如何从-5-亿个数中找出中位数","children":[]},{"level":3,"title":"如何在大量的数据中判断一个数是否存在？","slug":"如何在大量的数据中判断一个数是否存在","link":"#如何在大量的数据中判断一个数是否存在","children":[]},{"level":3,"title":"transformer","slug":"transformer","link":"#transformer","children":[]},{"level":3,"title":"cookie session token","slug":"cookie-session-token","link":"#cookie-session-token","children":[]},{"level":3,"title":"http是哪一层","slug":"http是哪一层","link":"#http是哪一层","children":[]},{"level":3,"title":"arp是干什么的","slug":"arp是干什么的","link":"#arp是干什么的","children":[]},{"level":3,"title":"dns是干什么的","slug":"dns是干什么的","link":"#dns是干什么的","children":[]},{"level":3,"title":"多线程如何保证顺序运行或者说共享进程不受影响","slug":"多线程如何保证顺序运行或者说共享进程不受影响","link":"#多线程如何保证顺序运行或者说共享进程不受影响","children":[]},{"level":3,"title":"加解密手段和默认加密方法","slug":"加解密手段和默认加密方法","link":"#加解密手段和默认加密方法","children":[]}]},{"level":2,"title":"tzsr","slug":"tzsr","link":"#tzsr","children":[{"level":3,"title":"线程池有两种，你讲一下第二种","slug":"线程池有两种-你讲一下第二种","link":"#线程池有两种-你讲一下第二种","children":[]},{"level":3,"title":"MySQL中事务、索引、锁机制的了解 和一些SQL优化语句","slug":"mysql中事务、索引、锁机制的了解-和一些sql优化语句","link":"#mysql中事务、索引、锁机制的了解-和一些sql优化语句","children":[]},{"level":3,"title":"Nacos为什么修改配置之后不用重启服务器就可以更改配置了","slug":"nacos为什么修改配置之后不用重启服务器就可以更改配置了","link":"#nacos为什么修改配置之后不用重启服务器就可以更改配置了","children":[]},{"level":3,"title":"Redis中的常见数据结构","slug":"redis中的常见数据结构","link":"#redis中的常见数据结构","children":[]},{"level":3,"title":"JVM的基础知识","slug":"jvm的基础知识","link":"#jvm的基础知识","children":[]},{"level":3,"title":"布隆过滤器实现的原理，里面用的是什么数据结构","slug":"布隆过滤器实现的原理-里面用的是什么数据结构","link":"#布隆过滤器实现的原理-里面用的是什么数据结构","children":[]},{"level":3,"title":"缓存穿透、缓存击穿、缓存雪崩的问题以及解决方法","slug":"缓存穿透、缓存击穿、缓存雪崩的问题以及解决方法","link":"#缓存穿透、缓存击穿、缓存雪崩的问题以及解决方法","children":[]},{"level":3,"title":"介绍一下雪花算法，和实现的原理","slug":"介绍一下雪花算法-和实现的原理","link":"#介绍一下雪花算法-和实现的原理","children":[]},{"level":3,"title":"JWT令牌技术和ThreadLocal配合拦截器的意义是什么","slug":"jwt令牌技术和threadlocal配合拦截器的意义是什么","link":"#jwt令牌技术和threadlocal配合拦截器的意义是什么","children":[]},{"level":3,"title":"SpringCache + Redis的技术介绍一下","slug":"springcache-redis的技术介绍一下","link":"#springcache-redis的技术介绍一下","children":[]},{"level":3,"title":"SpringTask定时任务处理","slug":"springtask定时任务处理","link":"#springtask定时任务处理","children":[]},{"level":3,"title":"HashMap的详细原理和介绍","slug":"hashmap的详细原理和介绍","link":"#hashmap的详细原理和介绍","children":[]},{"level":3,"title":"JUC并发编程知道哪些","slug":"juc并发编程知道哪些","link":"#juc并发编程知道哪些","children":[]},{"level":3,"title":"JVM基础知识了解吗","slug":"jvm基础知识了解吗","link":"#jvm基础知识了解吗","children":[]},{"level":3,"title":"Spring和SpringBoot的区别和优点是什么，Spring MVC和他们的关系是什么","slug":"spring和springboot的区别和优点是什么-spring-mvc和他们的关系是什么","link":"#spring和springboot的区别和优点是什么-spring-mvc和他们的关系是什么","children":[]},{"level":3,"title":"了解微服务的基本框架吗，简单介绍一下微服务架构","slug":"了解微服务的基本框架吗-简单介绍一下微服务架构","link":"#了解微服务的基本框架吗-简单介绍一下微服务架构","children":[]}]},{"level":2,"title":"顺丰-Java岗","slug":"顺丰-java岗","link":"#顺丰-java岗","children":[{"level":3,"title":"自我介绍","slug":"自我介绍","link":"#自我介绍","children":[]},{"level":3,"title":"你的项目是怎么实现的？","slug":"你的项目是怎么实现的","link":"#你的项目是怎么实现的","children":[]},{"level":3,"title":"你平时写页面写的多吗？你项目的数据库表是怎么设计的？数据库怎么查询？怎么查看数据库引擎？","slug":"你平时写页面写的多吗-你项目的数据库表是怎么设计的-数据库怎么查询-怎么查看数据库引擎","link":"#你平时写页面写的多吗-你项目的数据库表是怎么设计的-数据库怎么查询-怎么查看数据库引擎","children":[]},{"level":3,"title":"怎么查看数据库日志，日志类型有哪些，简述一下？怎么优化数据库性能","slug":"怎么查看数据库日志-日志类型有哪些-简述一下-怎么优化数据库性能","link":"#怎么查看数据库日志-日志类型有哪些-简述一下-怎么优化数据库性能","children":[]},{"level":3,"title":"数据库索引有了解吗？为什么要用索引？你的项目什么地方用了索引？怎么保证线程安全？","slug":"数据库索引有了解吗-为什么要用索引-你的项目什么地方用了索引-怎么保证线程安全","link":"#数据库索引有了解吗-为什么要用索引-你的项目什么地方用了索引-怎么保证线程安全","children":[]},{"level":3,"title":"谈谈数据库索引的底层结构？","slug":"谈谈数据库索引的底层结构","link":"#谈谈数据库索引的底层结构","children":[]},{"level":3,"title":"你说你项目是基于SpringBoot实现的，那你说说SpringBoot自动装配原理","slug":"你说你项目是基于springboot实现的-那你说说springboot自动装配原理","link":"#你说你项目是基于springboot实现的-那你说说springboot自动装配原理","children":[]},{"level":3,"title":"SpringBoot的Starter有了解过吗？如何理解Starter？","slug":"springboot的starter有了解过吗-如何理解starter","link":"#springboot的starter有了解过吗-如何理解starter","children":[]},{"level":3,"title":"你用过SpringBoot？那你肯定了解Spring了，那来谈谈Spring的核心","slug":"你用过springboot-那你肯定了解spring了-那来谈谈spring的核心","link":"#你用过springboot-那你肯定了解spring了-那来谈谈spring的核心","children":[]},{"level":3,"title":"Spring中有哪些设计模式？","slug":"spring中有哪些设计模式","link":"#spring中有哪些设计模式","children":[]},{"level":3,"title":"Spring中所有对象都是单例的吗？","slug":"spring中所有对象都是单例的吗","link":"#spring中所有对象都是单例的吗","children":[]},{"level":3,"title":"你使用Spring的时候有没有想过它是怎么运行的？","slug":"你使用spring的时候有没有想过它是怎么运行的","link":"#你使用spring的时候有没有想过它是怎么运行的","children":[]},{"level":3,"title":"你熟悉jvm是吧？来描述一下jvm的垃圾回收机制？","slug":"你熟悉jvm是吧-来描述一下jvm的垃圾回收机制","link":"#你熟悉jvm是吧-来描述一下jvm的垃圾回收机制","children":[]},{"level":3,"title":"既然看你这么会，那我问你什么jvm进行垃圾回收的时候会不会影响到我们的业务","slug":"既然看你这么会-那我问你什么jvm进行垃圾回收的时候会不会影响到我们的业务","link":"#既然看你这么会-那我问你什么jvm进行垃圾回收的时候会不会影响到我们的业务","children":[]},{"level":3,"title":"你知道java中有哪些工具类吗？","slug":"你知道java中有哪些工具类吗","link":"#你知道java中有哪些工具类吗","children":[]},{"level":3,"title":"那你说说java集合有哪些？他们有什么用？","slug":"那你说说java集合有哪些-他们有什么用","link":"#那你说说java集合有哪些-他们有什么用","children":[]},{"level":3,"title":"那你说说你最熟悉的集合类型","slug":"那你说说你最熟悉的集合类型","link":"#那你说说你最熟悉的集合类型","children":[]},{"level":3,"title":"那你知道LinkedList创建的时候，初试的容量是多少吗？","slug":"那你知道linkedlist创建的时候-初试的容量是多少吗","link":"#那你知道linkedlist创建的时候-初试的容量是多少吗","children":[]},{"level":3,"title":"了解过哪些算法，比如贪心，快速排序之类的？","slug":"了解过哪些算法-比如贪心-快速排序之类的","link":"#了解过哪些算法-比如贪心-快速排序之类的","children":[]}]}],"git":{"createdTime":1741411874000,"updatedTime":1742721462000,"contributors":[{"name":"Jaeger Eren","email":"erenjaegerking@qq.com","commits":30}]},"readingTime":{"minutes":40.16,"words":12049},"filePathRelative":"tech/now.md","localizedDate":"2025年3月8日","excerpt":"<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p>胜不骄，败不馁\\n我最大的敌人就是我自己\\n心比天高，眼高手低\\n菜就是菜，不要给自己找借口\\n将所有相关的场景都自己去实现一遍</p>\\n</div>\\n<h2>zh</h2>\\n<h3>Linux 中查看占用内存命令</h3>\\n<div class=\\"language-shell line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"shell\\" data-title=\\"shell\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">我在Linux常用的命令</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">top</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 查看系统资源使用情况</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">df</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -h</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 查看磁盘空间使用情况</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">ps</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -ef</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> | </span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">grep</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> java</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 查看所有包含java的进程</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> (最主要的参数是%CPU </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">和</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> %MEM</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">nohup</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> java</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -jar</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> app.jar</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> &gt; </span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">output.log</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> 2&gt;&amp;1 &amp; </span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">后台启动Java应用，并将日志保存到指定文件</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">netstat</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -anp</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> | </span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">grep</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 8080</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 查看端口占用情况</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">kill</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -9</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> pid</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 强制杀死一个进程</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">1.查看系统整体内存使用情况</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">free</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> -h</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">2.查看各个进程的内存占用</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">top(按</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Shift</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> +</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> M</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 可以按内存使用排序。</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">top</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> 命令用于实时显示系统的资源使用情况，包括</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> CPU、内存、进程等。</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">top</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 14:32:01</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> up</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">  2:15,</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">  2</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> users,</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">  load</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> average:</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 0.15,</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 0.10,</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 0.05</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">Tasks:</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 120</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> total,</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   1</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> running,</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 119</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> sleeping,</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> stopped,</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> zombie</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">%Cpu(s</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">):  1.5 us,  0.5 sy,  0.0 ni, 97.5 id,  0.5 wa,  0.0 hi,  0.0 si,  0.0 st</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">MiB</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Mem</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> :</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   8000.0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> total,</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   2000.0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> free,</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   3000.0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> used,</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   3000.0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> buff/cache</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">MiB</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Swap:</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   2000.0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> total,</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   1500.0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> free,</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">    500.0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> used.</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   4000.0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> avail</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Mem</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">  PID</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> USER</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">      PR</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">  NI</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">    VIRT</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">    RES</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">    SHR</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> S</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">  %CPU</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">  %MEM</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">     TIME+</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> COMMAND</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> 1234</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> user</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">      20</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   0</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   12345</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   6789</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   1234</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> S</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   1.0</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   0.1</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">   0:00.10</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> java</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> 5678</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> user</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">      20</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   0</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   23456</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   7890</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   2345</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> S</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   0.5</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">   0.2</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">   0:01.20</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> python</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">1.</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 第一行：</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">14:32:01</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：当前时间。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">up</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 2:15`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：系统已运行</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 2</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 小时</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 15</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 分钟。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">2</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> users`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：当前有</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 2</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 个用户登录。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">load</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> average`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：系统的平均负载（1</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 分钟、5</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 分钟、15</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 分钟）。</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">2.</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 第二行（Tasks）：</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">120</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> total`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：总进程数。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">1</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> running`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：正在运行的进程数。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">119</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> sleeping`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：休眠的进程数。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> stopped`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：停止的进程数。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">0</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> zombie`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：僵尸进程数。</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">3.</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 第三行（%Cpu</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">s</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">）：</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">us</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：用户空间占用</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> CPU</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 百分比。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">sy</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：内核空间占用</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> CPU</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 百分比。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">id</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：空闲</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> CPU</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 百分比。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">wa</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：等待</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> I/O</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 操作的</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> CPU</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 百分比。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">hi</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：硬件中断占用</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> CPU</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 百分比。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">si</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：软件中断占用</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> CPU</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 百分比。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">st</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：虚拟机偷取的</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> CPU</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 百分比。</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">4.</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 第四行（MiB</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Mem）：</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">total</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：总内存。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">free</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：空闲内存。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">used</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：已用内存。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">buff/cache</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：缓存和缓冲区内存。</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">5.</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 第五行（MiB</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Swap）：</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">total</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：总交换分区大小。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">free</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：空闲交换分区大小。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">used</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：已用交换分区大小。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">avail</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> Mem`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：可用内存。</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">6.</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 进程列表：</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">PID</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：进程</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> ID。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">USER</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：进程所有者。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">PR</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：进程优先级。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">NI</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：进程的</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> nice</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 值。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">VIRT</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：虚拟内存使用量。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">RES</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：物理内存使用量。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">SHR</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：共享内存使用量。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">S</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：进程状态（S</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">=休眠，R=运行，Z=僵尸）。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">%CPU</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：CPU</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 使用率。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">%MEM</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：内存使用率。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">TIME+</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：进程占用</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> CPU</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> 的总时间。</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">   -</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> `</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">COMMAND</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">`</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">：进程名称或命令。</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{d as comp,r as data};
