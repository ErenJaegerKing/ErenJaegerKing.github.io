import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as i,e as l,o as p}from"./app-CgRRF-Zm.js";const a={};function n(r,e){return p(),i("div",null,e[0]||(e[0]=[l('<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>关于如何人生如何走的总结以及期望</p></div><hr><h2 id="程序员如何快速学习新技术" tabindex="-1"><a class="header-anchor" href="#程序员如何快速学习新技术"><span>程序员如何快速学习新技术</span></a></h2><p>学习一个技术最有效最快的办法就是将这个技术和自己之前学到的技术建立连接，形成一个网络。</p><p>研究某个技术原理的时候，为了避免内容过于抽象，我们同样可以动手实践</p><p>很多人一提到八股文，就是一脸不屑。在我看来，如果你不是死记硬背八股文，而是去所思考这些面试题的本质。那你在准备八股文的过程中，同样也能让你加深对这项技术的了解。</p><p>知行合一！</p><h2 id="程序员的技术成长战略" tabindex="-1"><a class="header-anchor" href="#程序员的技术成长战略"><span>程序员的技术成长战略</span></a></h2><p>你的技术成长战略究竟是什么？</p><p>不清楚</p><p>未来工作后的计划和打算</p><p>在哔哩哔哩和YouTuBe上面输出教学视频（在学习金字塔的5~7层主动和高效地学习，有反馈和度量的学习，就是闭环学习）</p><h3 id="跟技术大牛学成长战略" tabindex="-1"><a class="header-anchor" href="#跟技术大牛学成长战略"><span>跟技术大牛学成长战略</span></a></h3><p>越是牛逼的技术人，他们的技术成长战略和路径越是清晰，我们越容易从中探究出一些成功的模式。</p><p>什么技术都想学、认为各种项目做得越多越牛的阶段。（技术格局小）</p><ol><li>找到了适合自己的长期战略目标。</li><li>专注深耕一个(或有限几个相关的)细分领域(Niche)，保持定力，不随便切换领域。</li><li>长期投入，三人都持续投入了 10 年。</li><li>年度细分计划+持续可量化的价值产出(Persistent &amp; Measurable Value Output)。</li><li>以终为始是牛人和普通人的一大区别。</li></ol><p>其中一个重点就是：这些大牛的成长都是通过<strong>持续有价值产出(Persistent Valuable Output)</strong> 来驱动的。</p><h3 id="学习金字塔和刻意训练" tabindex="-1"><a class="header-anchor" href="#学习金字塔和刻意训练"><span>学习金字塔和刻意训练</span></a></h3><figure><img src="https://drawingbed-686.pages.dev/myblog/202412102048560.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>学习金字塔是美国缅因州国家训练实验室的研究成果，它认为：</p><blockquote><p>1.我们平时上课听讲之后，学习内容平均留存率大致只有 5%左右； 2.书本阅读的平均留存率大致只有 10%左右； 3.学习配上视听效果的课程，平均留存率大致在 20%左右； 4.老师实际动手做实验演示后的平均留存率大致在 30%左右； 5.小组讨论(尤其是辩论后)的平均留存率可以达到 50%左右； 6.在实践中实际应用所学之后，平均留存率可以达到 75%左右； 7.在实践的基础上，再把所学梳理出来，转而再传授给他人后，平均留存率可以达到 90%左右。</p></blockquote><p>上面列出的 7 种学习方法，前四种称为 <strong>被动学习</strong> ，后三种称为 <strong>主动学习</strong>。</p><p>人与人之间的先天身体其实都差不多，但是后天身体素质和能力有差异，这些差异，很大程度是由后天对身体和大脑的训练质量、频度和强度所造成的。</p><p>心智成熟和自律的人就会对自己进行持续地 <strong>刻意训练</strong> 。</p><p>对身体的训练</p><ul><li>坚持跑步3km</li><li>坚持做40个仰卧起坐</li><li>坚持5分钟平板支撑</li><li>坚持让身体燃烧一定量的卡路里 对大脑的训练</li><li>坚持敲代码 （训练脑 + 手）</li><li>坚持输出十分钟的话语（训练脑 + 口语表达）</li><li>坚持定期总结输出到blog文章（训练脑 + 文字表达）</li></ul><p>需要循序渐进(Incremental)+持续地(Persistent)刻意训练。</p><p>金句1：在学习金字塔的 5 ～ 7 层主动和高效地学习。学习产出获得用户使用，有客户价值(Customer Value)，有用户就有反馈和度量。记住，有反馈和度量的学习，也称闭环学习，它是能够不断改进提升的；反之，没有反馈和度量的学习，无法改进提升。</p><p>金句2：现在，你也应该明白，晒个书单秀个技能图谱很简单，读个书上个课也不难。但是要你给出 5 ～ 10 年的总体技术成长战略，再基于这个战略给出每年的细分落地计划(尤其是产出计划)，然后再严格按计划执行，这的确是很难的事情。这需要大量的实践训练+深度思考，要燃烧大量的脑部卡路里！但这是上天设置的进化法则，成长为真正的技术大牛如同成长为一流的运动员，是需要通过燃烧与之相匹配量的卡路里来交换的。成长为真正的技术大牛，也是需要通过产出与之匹配的社会价值来交换的，只有这样社会才能正常进化。你推进了社会进化，社会才会回馈你。如果不是这样，社会就无法正常进化。</p><h3 id="战略思维的诞生" tabindex="-1"><a class="header-anchor" href="#战略思维的诞生"><span>战略思维的诞生</span></a></h3><ul><li><p>一般毕业生刚进入企业工作的时候，思考大都是以天/星期/月为单位的，基本上都是今天学个什么技术，明天学个什么语言，很少会去思考一年甚至更长的目标。这是个眼前漆黑看不到的懵懂时期，捕捉到机会点的能力和概率都非常小。</p></li><li><p>工作了三年以后，悟性好的人通常会以一年为思考周期，制定和实施一些年度计划。这个时期是相信天赋和比拼能力的阶段，可以捕捉到一些小机会。</p></li><li><p>工作了五年以后，一些悟性好的人会产生出一定的胆识和眼光，他们会以 3 ～ 5 年为周期来制定和实施计划，开始主动布局去捕捉一些中型机会点。工作了十年以后，悟性高的人会看到模式和规则变化，例如看出行业发展模式，还有人才的成长模式等，于是开始诞生出战略性思维。然后他们会以 5 ～ 10 年为周期来制定和实施自己的战略计划，开始主动布局去捕捉一些中大机会点。Brendan Gregg，Jay Kreps 和 Brad Traversy 都是属于这个阶段的人。</p></li><li><p>当然还有很少一些更牛的时代精英，他们能够看透时代和人性，他们的思考是以一生甚至更长时间为单位的，这些超人不在本文讨论范围内。</p></li></ul><h3 id="总结和建议" tabindex="-1"><a class="header-anchor" href="#总结和建议"><span>总结和建议</span></a></h3><ul><li>1、以 5 ～ 10 年为周期去布局谋划你的战略。</li></ul><p>现在大学生毕业的年龄一般在 22 ～ 23 岁，那么在工作了十年后，也就是在你 32 ～ 33 岁的时候，你也差不多看了十年了，应该对自己和周围的世界(你的行业和领域)有一个比较深刻的领悟了。如果你到这个年纪还懵懵懂懂，今天抓东明天抓西，那么只能说你的胆识格局是相当的低。在当前 IT 行业竞争这么激烈的情况下，到 35 岁被下岗可能就在眼前了。有了战略性思考，你应该以 5 ～ 10 年为周期去布局谋划你的战略。以 Brendan Gregg，Jay Kreps 和 Brad Traversy 这些大牛为例，人生若真的要干点成就出来，投入周期一般都要十年的。从 33 岁开始，你大致有 3 个十年，因为到 60 岁以后，一般人都老眼昏花干不了大事了。如果你悟性差一点，到 40 岁才开始规划，那么你大致还有 2 个十年。如果你规划好了，这 2 ～ 3 个十年可以成就不小的事业。否则，你很可能一生都成就不了什么事业，或者一直在帮助别人成就别人的事业。</p><ul><li>2、专注自己的精力。</li></ul><p>考虑到人生能干事业的时间也就是 2 ～ 3 个十年，你会发现人生其实很短暂，这时候你会把精力都投入到实现你的十年战略上去，没有时间再浪费在比如网上的闲聊和扯皮争论上去。</p><ul><li>3、细分落地计划尤其是产出计划。</li></ul><p>有了十年战略方向，下一步是每年的细分落地计划，尤其是产出计划。这些计划主要应该工作在学习金字塔的 5/6/7 层。产出应该是刻意训练+燃烧卡路里的结果，每天让身体和大脑都保持燃烧一定量的卡路里。</p><ul><li>4、产出有价值的东西形成正反馈。</li></ul><p>产出应该有客户价值，自己能学习(自己成长进化)，对别人还有用(推动社会成长进化)，这样可以得到用户回馈和度量，形成一个闭环，可以持续改进和提升你的学习。</p><ul><li>5、少即是多。</li></ul><p>深耕一个(或有限几个相关的)领域。所有细分计划应该紧密围绕你的战略展开。克制内心欲望，不要贪多和分心，不要被喧嚣的世界所迷惑。</p><ul><li><p>6、战略方向+细分计划都要写下来，定期 review 优化。</p></li><li><p>7、要有定力，持续努力。</p></li></ul><p>曲则全、枉则直，战略实现是不可能直线的。战略方向和细分计划通常要按需调整，尤其在早期，但是最终要收敛。如果老是变不收敛，就是缺乏战略定力，是个必须思考和解决的大问题。别人的成长战略可以参考，但是不要刻意去模仿，你有你自己的颜色，你应该成为独一无二的你。战略方向和细分计划明确了，接下来就是按部就班执行，十年如一日铁打不动。</p><ul><li>8、慢就是快。</li></ul><p>战略目标的实现也和种树一样是生长出来的，需要时间耐心栽培，记住**慢就是快。**焦虑纠结的时候，像念经一样默念王阳明《传习录》中的教诲：</p><blockquote><p>立志用功，如种树然。方其根芽，犹未有干；及其有干，尚未有枝；枝而后叶，叶而后花实。初种根时，只 管栽培灌溉。勿作枝想，勿作花想，勿作实想。悬想何益？但不忘栽培之功，怕没有枝叶花实？ 译文： 实现战略目标，就像种树一样。刚开始只是一个小根芽，树干还没有长出来；树干长出来了，枝叶才能慢慢 长出来；树枝长出来，然后才能开花和结果。刚开始种树的时候，只管栽培灌溉，别老是纠结枝什么时候长 出来，花什么时候开，果实什么时候结出来。纠结有什么好处呢？只要你坚持投入栽培，还怕没有枝叶花实吗？</p></blockquote><ul><li>9、要谦虚，不要骄傲（自己加的）</li></ul><p>虚心使人进步，骄傲使人落后。——近代毛泽东</p><p>梅须逊雪三分白，雪却输梅一段香。——（宋）卢梅坡《雪梅·其一》</p><p>未出土时先有节，到凌云处仍虚心。——北宋徐庭筠《咏竹》</p><h2 id="十年大厂成长之路" tabindex="-1"><a class="header-anchor" href="#十年大厂成长之路"><span>十年大厂成长之路</span></a></h2><p>参考文献（原文地址在这个guide中有表明，可以自行寻找，我只做总结）</p><p>https://javaguide.cn/</p>',54)]))}const c=t(a,[["render",n],["__file","programLife.html.vue"]]),d=JSON.parse('{"path":"/insights/programLife.html","title":"程序人生","lang":"zh-CN","frontmatter":{"title":"程序人生","description":"相关信息 关于如何人生如何走的总结以及期望 程序员如何快速学习新技术 学习一个技术最有效最快的办法就是将这个技术和自己之前学到的技术建立连接，形成一个网络。 研究某个技术原理的时候，为了避免内容过于抽象，我们同样可以动手实践 很多人一提到八股文，就是一脸不屑。在我看来，如果你不是死记硬背八股文，而是去所思考这些面试题的本质。那你在准备八股文的过程中，同...","icon":"","date":"2024-12-10T00:00:00.000Z","category":["程序人生"],"tag":["程序人生"],"head":[["meta",{"property":"og:url","content":"https://he9.xin/insights/programLife.html"}],["meta",{"property":"og:site_name","content":"春风不语即随本心"}],["meta",{"property":"og:title","content":"程序人生"}],["meta",{"property":"og:description","content":"相关信息 关于如何人生如何走的总结以及期望 程序员如何快速学习新技术 学习一个技术最有效最快的办法就是将这个技术和自己之前学到的技术建立连接，形成一个网络。 研究某个技术原理的时候，为了避免内容过于抽象，我们同样可以动手实践 很多人一提到八股文，就是一脸不屑。在我看来，如果你不是死记硬背八股文，而是去所思考这些面试题的本质。那你在准备八股文的过程中，同..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://drawingbed-686.pages.dev/myblog/202412102048560.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-10T13:31:27.000Z"}],["meta",{"property":"article:author","content":"ErenJaegerKing"}],["meta",{"property":"article:tag","content":"程序人生"}],["meta",{"property":"article:published_time","content":"2024-12-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-10T13:31:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"程序人生\\",\\"image\\":[\\"https://drawingbed-686.pages.dev/myblog/202412102048560.png\\"],\\"datePublished\\":\\"2024-12-10T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-10T13:31:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"ErenJaegerKing\\",\\"url\\":\\"https://he9.xin\\",\\"email\\":\\"erenjaegerking@qq.com\\"}]}"]]},"headers":[{"level":2,"title":"程序员如何快速学习新技术","slug":"程序员如何快速学习新技术","link":"#程序员如何快速学习新技术","children":[]},{"level":2,"title":"程序员的技术成长战略","slug":"程序员的技术成长战略","link":"#程序员的技术成长战略","children":[{"level":3,"title":"跟技术大牛学成长战略","slug":"跟技术大牛学成长战略","link":"#跟技术大牛学成长战略","children":[]},{"level":3,"title":"学习金字塔和刻意训练","slug":"学习金字塔和刻意训练","link":"#学习金字塔和刻意训练","children":[]},{"level":3,"title":"战略思维的诞生","slug":"战略思维的诞生","link":"#战略思维的诞生","children":[]},{"level":3,"title":"总结和建议","slug":"总结和建议","link":"#总结和建议","children":[]}]},{"level":2,"title":"十年大厂成长之路","slug":"十年大厂成长之路","link":"#十年大厂成长之路","children":[]}],"git":{"createdTime":1733837487000,"updatedTime":1733837487000,"contributors":[{"name":"erenjaeger","email":"ErenJaegerKing@qq.com","commits":1}]},"readingTime":{"minutes":9.61,"words":2882},"filePathRelative":"insights/programLife.md","localizedDate":"2024年12月10日","excerpt":"<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">相关信息</p>\\n<p>关于如何人生如何走的总结以及期望</p>\\n</div>\\n<hr>\\n<h2>程序员如何快速学习新技术</h2>\\n<p>学习一个技术最有效最快的办法就是将这个技术和自己之前学到的技术建立连接，形成一个网络。</p>\\n<p>研究某个技术原理的时候，为了避免内容过于抽象，我们同样可以动手实践</p>\\n<p>很多人一提到八股文，就是一脸不屑。在我看来，如果你不是死记硬背八股文，而是去所思考这些面试题的本质。那你在准备八股文的过程中，同样也能让你加深对这项技术的了解。</p>","autoDesc":true}');export{c as comp,d as data};
